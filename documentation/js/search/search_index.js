var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.673,1,1.646]],["body/modules/AppModule.html",[0,1.104,1,3.209,2,1.26,3,1.114,4,1.623,5,1.623,6,1.26,7,2.119,8,1.623,9,2.546,10,2.546,11,2.34,12,0.049,13,2.66,14,2.383,15,2.119,16,1.623,17,0.983,18,0.488,19,0.488,20,0.268,21,3.145,22,1.863,23,2.7,24,3.7,25,1.312,26,0.662,27,4.105,28,3.145,29,4.105,30,3.145,31,2.546,32,2.153,33,3.145,34,3.324,35,1.131,36,1.283,37,0.991,38,2.546,39,2.81,40,2.546,41,2.546,42,3.145,43,2.546,44,1.858,45,3.145,46,2.546,47,1.515,48,3.145,49,1.26,50,1.623,51,3.145,52,3.145,53,3.145,54,1.428,55,2.546,56,3.145,57,3.145,58,3.324,59,3.145,60,3.145,61,3.145,62,3.145,63,0.488,64,0.268,65,0.027,66,0.035,67,0.027]],["title/injectables/ConfigService.html",[47,0.871,68,0.673]],["body/injectables/ConfigService.html",[0,1.106,12,0.049,18,0.424,19,0.424,20,0.39,25,1.195,26,0.575,35,0.752,37,0.66,47,1.431,49,1.834,63,0.58,64,0.318,65,0.023,66,0.032,67,0.023,68,1.106,69,1.24,70,2.363,71,2.212,72,0.902,73,3.736,74,2.555,75,3.736,76,3.448,77,3.736,78,3.736,79,3.133,80,3.026,81,3.026,82,1.929,83,1.834,84,3.736,85,3.026,86,3.736,87,3.736,88,1.696,89,1.929,90,3.026,91,3.026,92,2.078,93,1.158,94,1.684,95,1.24,96,0.575,97,1.497,98,2.363,99,2.078,100,4.258,101,1.696,102,1.41,103,3.736,104,1.933,105,1.261,106,1.706,107,3.736,108,1.497,109,1.029,110,1.323,111,3.736,112,3.736,113,2.732,114,3.026,115,3.736,116,4.949,117,2.208,118,3.736,119,1.696,120,2.557,121,1.929,122,3.026,123,3.736,124,3.026,125,3.736,126,1.41,127,2.732,128,2.732,129,2.732,130,1.87,131,1.24,132,0.854,133,1.614,134,2.732]],["title/modules/LoggerModule.html",[0,0.673,11,1.264]],["body/modules/LoggerModule.html",[0,1.257,2,1.412,3,1.247,4,1.818,5,1.818,6,1.412,7,2.488,8,2.488,11,2.473,12,0.049,15,2.278,16,1.818,17,1.102,18,0.547,19,0.547,20,0.3,25,1.066,26,0.742,63,0.685,64,0.376,65,0.03,66,0.038,67,0.03,72,0.851,81,3.574,82,2.278,104,1.599,105,1.54,135,2.853,136,2.853,137,2.853,138,3.523,139,4.414,140,1.38,141,3.021,142,3.574,143,4.414,144,3.574,145,3.574,146,3.021,147,3.574,148,3.523]],["title/injectables/LoggerService.html",[68,0.673,105,0.767]],["body/injectables/LoggerService.html",[12,0.049,18,0.75,19,0.434,20,0.238,25,0.675,26,0.588,63,0.589,64,0.394,65,0.024,66,0.032,67,0.024,68,0.917,69,1.269,72,0.675,93,1.041,94,1.727,95,1.269,96,0.588,101,1.723,104,2.098,105,1.372,106,1.726,108,1.726,109,1.187,110,1.526,119,1.956,131,2.098,132,1.347,142,3.073,149,2.263,150,3.073,151,3.795,152,3.073,153,3.795,154,3.795,155,3.073,156,3.073,157,2.597,158,3.073,159,3.795,160,3.073,161,3.795,162,3.073,163,4.308,164,2.731,165,3.795,166,3.795,167,4.832,168,2.795,169,4.983,170,3.795,171,3.795,172,3.795,173,3.795,174,2.242,175,5.257,176,4.308,177,3.795,178,2.795,179,2.242,180,3.795,181,3.795,182,2.795,183,3.073,184,3.795,185,3.795,186,3.795,187,2.795,188,2.795,189,2.795]],["title/injectables/OptimizerService.html",[68,0.673,190,1.264]],["body/injectables/OptimizerService.html",[12,0.049,18,0.406,19,0.406,20,0.355,25,1.005,26,0.55,36,1.405,37,1.085,39,2.481,47,1.527,49,1.048,50,1.35,54,1.889,63,0.563,64,0.309,65,0.022,66,0.031,67,0.022,68,0.876,69,1.187,70,1.35,72,0.632,74,1.871,82,1.871,83,1.048,89,2.148,93,1.005,94,1.405,95,1.187,96,0.55,97,1.453,98,1.871,99,2.143,101,1.646,102,1.871,104,2.04,105,1.238,106,1.667,108,1.453,109,0.998,110,1.284,119,1.187,126,1.35,131,1.187,132,0.818,140,1.133,162,2.935,190,2.04,191,1.238,192,2.117,193,2.935,194,3.625,195,1.284,196,2.04,197,2.655,198,2.04,199,4.161,200,3.625,201,2.615,202,2.615,203,3.625,204,2.615,205,3.625,206,3.625,207,3.639,208,1.871,209,2.935,210,3.37,211,3.625,212,4.161,213,4.161,214,3.625,215,3.625,216,3.625,217,4.161,218,3.625,219,3.37,220,2.142,221,2.935,222,1.646,223,2.935,224,2.481,225,2.615,226,3.625,227,2.615,228,2.615,229,2.615,230,2.615,231,2.615,232,2.117,233,2.117,234,2.117,235,2.117,236,2.615,237,2.615,238,2.117,239,1.545,240,2.615,241,2.615,242,2.615,243,2.615,244,2.615,245,2.615,246,2.615,247,2.615,248,2.615,249,2.615]],["title/injectables/PersistanceLayerService.html",[68,0.673,250,1.264]],["body/injectables/PersistanceLayerService.html",[12,0.049,18,0.261,19,0.261,20,0.274,22,1.189,25,1.006,26,0.354,35,1,36,1.406,37,1.086,44,0.994,47,1.36,49,0.674,50,0.869,54,2.298,63,0.407,64,0.223,65,0.014,66,0.022,67,0.014,68,0.633,69,0.764,70,0.869,72,0.777,74,1.352,82,1.352,83,1.05,92,1.648,93,0.877,94,1.406,95,0.764,96,0.354,97,1.05,98,2.321,99,1.891,101,1.189,102,1.352,104,1.46,105,1,106,1.742,108,1.576,109,1.083,110,1.54,119,2.144,121,1.874,122,2.121,126,0.869,131,1.891,132,1.36,133,2.461,140,1.135,164,1.548,179,1.548,191,1.239,195,1.808,208,2.321,220,1.548,222,1.189,224,1.793,239,2.57,250,2.144,251,3.078,252,2.657,253,1.363,254,2.121,255,2.485,256,2.605,257,2.62,258,2.62,259,2.62,260,2.522,261,2.791,262,3.216,263,2.62,264,2.939,265,3.216,266,3.216,267,2.62,268,1.683,269,3.63,270,1.683,271,2.62,272,2.62,273,1.683,274,1.793,275,2.298,276,1.793,277,2.202,278,1.683,279,2.485,280,2.485,281,2.485,282,3.344,283,1.683,284,4.165,285,1.683,286,2.62,287,2.62,288,1.363,289,2.121,290,2.121,291,2.62,292,1.793,293,2.62,294,2.62,295,2.121,296,2.121,297,2.62,298,2.62,299,2.62,300,2.62,301,1.683,302,2.144,303,1.683,304,2.121,305,1.901,306,1.793,307,1.455,308,2.121,309,2.62,310,1.683,311,2.62,312,1.683,313,2.62,314,2.121,315,2.121,316,1.576,317,2.62,318,1.793,319,1.683,320,1.152,321,1.683,322,3.216,323,1.683,324,1.793,325,1.683,326,1.683,327,1.683,328,1.683,329,1.683,330,3.216,331,2.62,332,1.683,333,1.683,334,1.683,335,1.152]],["title/controllers/PreRenderController.html",[336,1.116,337,1.646]],["body/controllers/PreRenderController.html",[12,0.05,18,0.295,19,0.295,20,0.162,22,0.862,25,1.003,26,0.4,35,1.4,36,1.299,37,0.838,54,1.984,63,0.295,64,0.162,65,0.016,66,0.025,67,0.016,83,1.39,88,0.862,93,0.459,95,1.574,96,0.4,98,0.98,99,0.862,101,1.305,102,0.98,106,1.55,108,1.39,109,0.955,110,1.228,119,2.173,121,1.484,130,1.3,131,1.886,132,1.299,133,2.762,150,2.328,164,2.828,191,1.144,195,1.848,196,1.574,198,0.862,222,1.886,239,1.698,274,2.374,275,2.25,276,1.3,277,2.374,280,2.992,281,2.647,282,2.992,302,0.862,307,1.751,316,1.39,318,2.374,320,1.3,324,1.967,335,1.3,336,1.39,337,2.682,338,1.538,339,1.3,340,1.819,341,2.874,342,3.867,343,3.468,344,2.874,345,1.899,346,3.867,347,2.874,348,1.899,349,3.468,350,2.874,351,1.899,352,1.899,353,2.874,354,1.899,355,3.468,356,1.899,357,2.583,358,2.874,359,1.899,360,3.867,361,4.154,362,3.468,363,3.468,364,1.899,365,1.899,366,1.574,367,1.122,368,1.122,369,1.538,370,1.122,371,1.899,372,1.899,373,2.874,374,2.328,375,3.132,376,2.874,377,3.468,378,1.538,379,1.899,380,2.328,381,1.899,382,2.874,383,1.665,384,2.874,385,1.484,386,2.874,387,2.328,388,2.874,389,3.468,390,2.328,391,2.874,392,1.899,393,1.899,394,1.899,395,1.899,396,1.899,397,2.328,398,1.152,399,1.122,400,1.538,401,2.874,402,1.899,403,1.122,404,1.899,405,1.538,406,1.899,407,1.122,408,1.899,409,1.899,410,1.538,411,1.899,412,0.98,413,1.899,414,1.3,415,1.538,416,1.899,417,1.899,418,1.899,419,1.899,420,1.899,421,1.899,422,3.468,423,2.874,424,1.899,425,1.899,426,1.899,427,1.899,428,1.899,429,1.899,430,1.899,431,1.899]],["title/modules/PreRenderModule.html",[0,0.673,13,1.437]],["body/modules/PreRenderModule.html",[0,1.072,2,1.187,3,1.571,4,1.529,5,1.529,6,1.187,7,2.29,8,1.529,11,2.301,12,0.049,13,2.86,14,2.301,15,2.037,16,1.529,17,0.926,18,0.46,19,0.46,20,0.252,22,1.791,24,3.195,25,1.298,26,0.624,34,3.195,35,1.425,36,0.926,37,1.19,38,2.399,39,2.701,40,2.399,41,2.399,43,2.399,44,1.75,46,2.399,63,0.613,64,0.336,65,0.025,66,0.034,67,0.025,72,0.715,74,2.037,109,0.816,190,2.301,191,0.816,196,2.148,250,2.301,251,2.028,252,1.75,337,2.622,366,2.301,367,1.75,368,1.75,369,2.399,378,2.399,432,2.399,433,2.962,434,2.399,435,2.962,436,2.701,437,3.946,438,2.962,439,2.701,440,2.962,441,2.399,442,2.962,443,2.399,444,2.962,445,2.962,446,2.962]],["title/classes/PreRenderRequestDTO.html",[64,0.237,357,1.646]],["body/classes/PreRenderRequestDTO.html",[12,0.049,17,1.195,18,0.438,19,0.438,20,0.241,35,1.377,36,1.355,37,1.046,63,0.438,64,0.426,65,0.024,66,0.033,67,0.024,72,0.682,83,1.532,88,1.735,93,1.121,94,1.563,95,1.282,96,0.595,97,1.532,99,2.269,106,1.532,121,1.973,132,1.195,140,0.883,191,1.193,195,1.717,197,2.259,198,2.36,209,3.095,220,2.259,222,1.735,275,1.735,292,2.616,305,2.259,306,2.616,316,1.736,336,1.86,339,2.616,340,1.86,357,2.743,383,1.532,398,1.532,399,2.259,407,1.669,412,1.973,414,2.965,415,3.095,447,2.825,448,2.287,449,2.825,450,2.825,451,3.822,452,3.822,453,3.822,454,3.822,455,2.616,456,3.822,457,3.422,458,3.822,459,3.095,460,3.822,461,4.641,462,3.822,463,3.095,464,3.822,465,3.422,466,3.822,467,3.095,468,3.822,469,2.616,470,3.822,471,3.822,472,2.825]],["title/interfaces/PreRenderedPageDataDTO.html",[370,1.646,473,1.437]],["body/interfaces/PreRenderedPageDataDTO.html",[12,0.049,18,0.446,19,0.446,20,0.245,35,1.383,36,0.898,37,0.693,63,0.446,64,0.245,65,0.025,66,0.033,67,0.025,72,0.693,88,1.754,89,1.995,92,1.754,93,1.213,94,1.653,96,0.604,97,1.548,117,2.283,132,1.366,140,1.208,146,2.645,191,0.791,195,1.909,260,2.729,261,2.761,275,1.754,305,2.283,316,1.872,336,1.15,340,1.548,370,2.882,383,2.013,385,2.412,398,2.013,412,1.995,436,2.645,455,2.645,469,2.645,473,1.482,474,1.965,475,2.325,476,2.325,477,2.871,478,2.871,479,2.871,480,2.645,481,3.129,482,3.129,483,3.129,484,3.129,485,3.129,486,3.784,487,3.129,488,3.129,489,3.129,490,3.129,491,3.949,492,3.864,493,3.129,494,3.129,495,3.129,496,3.129,497,2.645,498,3.129,499,3.129,500,2.645,501,3.129,502,2.283]],["title/interfaces/PreRenderedPageModel.html",[302,1.264,473,1.437]],["body/interfaces/PreRenderedPageModel.html",[12,0.049,18,0.419,19,0.419,20,0.23,35,1.358,63,0.419,64,0.23,65,0.023,66,0.032,67,0.023,72,0.652,88,1.682,89,1.913,92,1.682,93,1.242,94,1.693,96,0.568,97,1.485,110,1.613,117,2.19,132,1.424,140,1.159,146,2.537,191,0.743,195,1.888,260,2.775,261,2.984,275,1.682,292,2.537,302,2.239,305,2.914,316,1.825,340,1.485,383,1.976,385,2.351,398,2.061,412,1.913,436,2.537,455,2.537,469,2.537,473,1.393,474,1.848,480,2.537,481,3.001,482,3.001,483,3.001,484,3.001,485,3.001,486,3.688,487,3.001,488,3.001,489,3.001,490,3.001,491,3.001,493,3.001,494,3.001,495,3.001,496,3.001,497,2.537,498,3.001,499,3.001,500,2.537,501,3.001,502,2.19,503,2.186,504,2.699,505,2.699,506,2.699,507,3.706,508,3.706,509,3.427,510,3.706,511,3.706]],["title/modules/PreRendererConfigModule.html",[0,0.673,14,1.264]],["body/modules/PreRendererConfigModule.html",[0,1.25,2,1.189,3,1.051,4,1.532,5,1.532,6,1.189,7,2.039,8,2.293,12,0.049,14,2.302,15,2.039,16,1.532,17,0.928,18,0.461,19,0.461,20,0.441,25,1.073,26,0.625,37,0.717,47,1.644,49,1.189,50,1.532,63,0.613,64,0.337,65,0.025,66,0.034,67,0.025,72,0.717,76,2.403,80,3.199,83,1.583,105,1.088,109,1.304,121,2.039,126,1.532,174,2.798,179,1.754,222,1.794,223,4.106,232,3.199,255,3.241,279,2.704,307,1.583,340,1.583,398,1.583,443,2.403,512,2.403,513,2.403,514,2.968,515,3.951,516,3.951,517,3.199,518,3.951,519,3.951,520,3.951,521,3.199,522,3.951,523,3.951,524,3.951,525,3.951,526,3.951,527,3.951,528,3.951,529,2.704,530,3.199,531,3.199,532,3.951,533,3.951,534,3.199,535,3.951,536,3.199,537,3.951,538,3.951,539,2.968,540,2.968,541,2.968]],["title/injectables/PreRenderingEngineService.html",[68,0.673,366,1.264]],["body/injectables/PreRenderingEngineService.html",[12,0.05,17,0.338,18,0.168,19,0.168,20,0.358,25,0.871,26,0.228,35,1.125,36,1.444,37,1.116,47,1.128,49,0.433,50,0.558,54,2.212,63,0.168,64,0.092,65,0.009,66,0.016,67,0.009,68,0.442,69,0.491,70,0.558,83,0.433,85,3.308,93,1.167,94,1.684,96,0.228,97,0.733,98,2.572,99,2.172,101,0.83,102,0.944,104,1.268,105,0.769,106,1.851,108,1.583,109,1.088,110,1.399,119,2.23,120,2.796,126,0.558,131,1.854,132,1.401,133,2.483,141,1.251,157,0.74,164,1.65,190,1.638,191,1.272,193,0.876,195,1.694,196,2.354,197,1.65,198,0.83,207,0.876,208,0.944,222,0.491,224,2.796,238,0.876,239,2.798,250,1.268,252,0.639,260,0.944,264,2.261,274,1.251,275,2.172,276,1.251,277,0.74,280,1.251,281,1.251,282,3.335,288,0.876,302,1.538,304,1.48,307,1.358,308,1.48,316,0.433,318,1.251,320,0.74,324,2.596,335,1.251,340,1.251,366,2.097,367,2.73,368,2.73,375,1.48,380,1.48,383,0.433,385,0.558,387,1.48,397,1.48,398,1.251,412,0.558,414,1.911,441,0.876,457,2.137,465,2.319,480,1.251,500,1.911,542,0.876,543,2.375,544,2.375,545,2.375,546,2.375,547,2.375,548,1.828,549,1.828,550,2.375,551,1.828,552,2.375,553,1.828,554,1.828,555,1.828,556,1.081,557,1.081,558,1.828,559,1.828,560,1.081,561,1.081,562,1.828,563,1.828,564,1.081,565,1.081,566,1.081,567,1.828,568,1.828,569,1.081,570,1.828,571,1.081,572,1.081,573,1.828,574,1.828,575,1.828,576,1.251,577,1.828,578,4.203,579,1.081,580,1.828,581,1.828,582,1.828,583,1.828,584,1.828,585,1.081,586,1.828,587,3.121,588,1.828,589,1.081,590,2.375,591,1.081,592,1.48,593,3.308,594,3.949,595,1.081,596,1.48,597,1.081,598,1.48,599,1.081,600,1.48,601,1.081,602,1.48,603,1.081,604,0.74,605,1.081,606,1.081,607,2.375,608,1.828,609,1.081,610,1.828,611,1.081,612,1.828,613,1.081,614,1.828,615,1.081,616,1.081,617,1.081,618,1.081,619,0.876,620,1.828,621,1.828,622,1.828,623,1.081,624,1.081,625,1.081,626,2.375,627,1.081,628,1.828,629,1.081,630,1.081,631,1.081,632,1.081,633,1.081,634,1.081,635,1.081,636,1.828,637,1.081,638,1.081,639,1.828,640,1.081,641,1.081,642,1.081,643,1.081,644,1.081,645,1.081,646,1.081,647,0.876,648,1.081,649,1.081,650,1.081,651,1.081,652,1.081,653,1.081,654,1.081,655,1.081,656,1.828,657,1.828,658,1.081,659,1.081,660,1.081,661,1.081,662,1.081,663,1.081,664,1.081,665,1.828,666,1.48,667,1.48,668,1.081,669,0.876,670,1.081,671,1.081,672,1.081,673,1.081,674,1.081,675,1.081,676,1.081]],["title/controllers/PrerenderdAssetsController.html",[23,1.646,336,1.116]],["body/controllers/PrerenderdAssetsController.html",[12,0.047,18,0.653,19,0.653,20,0.358,22,1.91,23,2.904,25,1.016,26,0.885,31,3.406,32,2.879,63,0.653,64,0.358,65,0.036,66,0.042,67,0.036,336,1.686,339,2.879,677,3.406,678,3.406,679,4.914,680,4.206]],["title/coverage.html",[681,3.065]],["body/coverage.html",[6,1.34,12,0.048,20,0.285,23,1.976,32,2.289,36,1.638,37,1.237,47,1.046,49,1.34,64,0.285,65,0.029,66,0.037,67,0.029,68,1.237,70,1.726,71,2.708,92,1.518,93,0.808,105,0.921,149,2.708,190,1.518,191,1.485,192,2.708,196,1.939,208,2.205,250,1.518,251,2.289,252,1.976,253,2.708,302,1.518,307,1.34,336,1.987,337,1.976,338,2.708,357,1.976,366,1.518,367,1.976,368,1.976,370,1.976,439,2.289,448,2.708,473,2.205,475,2.708,503,2.708,542,2.708,666,3.81,677,2.708,678,2.708,681,2.708,682,2.289,683,3.344,684,3.344,685,4.271,686,4.271,687,2.708,688,2.708,689,2.708,690,5.239,691,4.271,692,4.271,693,2.708,694,4.271,695,3.344,696,3.344,697,3.344,698,4.271,699,3.344,700,3.344,701,2.708,702,3.344,703,3.344]],["title/dependencies.html",[3,1.184,704,2.333]],["body/dependencies.html",[3,1.397,12,0.049,26,0.83,44,2.331,65,0.034,66,0.04,67,0.034,124,3.194,256,3.194,604,2.7,705,5.067,706,3.944,707,3.944,708,3.944,709,4.731,710,3.944,711,3.944,712,3.944,713,4.731,714,3.944,715,3.944,716,3.944,717,3.944,718,3.944,719,3.944,720,3.944,721,3.944,722,3.944,723,3.944,724,3.944,725,2.7,726,3.944,727,3.944]],["title/miscellaneous/functions.html",[576,2.29,728,1.379]],["body/miscellaneous/functions.html",[6,2.046,12,0.044,17,1.255,65,0.034,66,0.041,67,0.034,96,0.845,108,1.609,109,1.106,110,1.422,140,1.255,174,2.372,208,2.072,399,2.372,407,2.372,502,2.825,529,2.748,576,2.748,682,2.748,687,3.251,688,3.871,689,3.871,693,3.251,725,3.272,728,2.372,729,4.014,730,4.014,731,4.014,732,3.251,733,3.251,734,4.014,735,4.014,736,3.251,737,4.014,738,4.014,739,3.251,740,3.251]],["title/index.html",[96,0.491,741,2.333,742,1.889]],["body/index.html",[3,0.686,12,0.048,17,0.912,20,0.165,35,1.154,54,0.879,55,1.568,58,1.568,65,0.017,66,0.025,67,0.017,72,0.468,74,1.506,82,0.999,88,0.879,89,0.999,90,1.568,91,1.568,92,0.879,93,0.468,109,0.533,114,1.568,117,1.144,130,1.996,140,0.912,141,2.402,145,1.568,147,2.362,152,1.568,155,1.568,156,2.841,157,1.325,158,1.568,160,2.362,174,2.073,179,2.073,183,2.841,195,1.033,196,2.226,197,2.943,198,0.879,210,1.568,219,2.841,220,1.144,221,2.362,233,2.362,234,1.568,235,2.841,254,2.362,255,1.996,260,1.811,261,1.144,279,1.325,289,1.568,290,1.568,295,1.568,296,1.568,306,1.325,307,0.776,314,1.568,315,2.841,340,0.776,374,2.841,383,1.406,390,1.568,398,0.776,399,2.308,400,1.568,403,1.144,405,1.568,407,1.144,410,1.568,457,1.325,459,1.568,463,1.568,465,1.325,467,1.568,476,1.568,497,2.673,502,1.144,517,1.568,521,3.565,530,1.568,531,2.362,534,1.568,536,1.568,592,1.568,593,1.568,596,1.568,598,1.568,600,1.568,602,1.568,604,1.325,619,1.568,647,1.568,669,1.568,682,3.014,725,1.996,732,1.568,733,1.568,736,1.568,739,2.841,740,3.393,742,1.568,743,3.905,744,2.917,745,1.936,746,3.509,747,3.509,748,3.509,749,1.936,750,2.917,751,2.917,752,1.936,753,1.936,754,1.936,755,3.509,756,1.936,757,1.936,758,2.917,759,1.936,760,2.917,761,1.936,762,1.936,763,2.917,764,1.936,765,4.189,766,2.917,767,1.936,768,1.936,769,1.936,770,1.936,771,1.936,772,2.917,773,1.936,774,3.509,775,1.936,776,1.936,777,1.936,778,1.936,779,1.936,780,1.936,781,2.917,782,1.936,783,1.936,784,3.509,785,2.917,786,2.917,787,1.936,788,1.936,789,1.936,790,1.936,791,1.936,792,3.509,793,3.905,794,2.917,795,1.936,796,2.917,797,1.936,798,1.936,799,1.936,800,1.936,801,1.936,802,1.936,803,1.936,804,1.936,805,1.936,806,1.936,807,1.936,808,1.936,809,2.917,810,1.936,811,3.509,812,1.936,813,1.936,814,2.917,815,1.936,816,1.936,817,1.936,818,2.917,819,2.917,820,3.905,821,1.936,822,1.936,823,1.936,824,1.936,825,1.936,826,1.936,827,1.936,828,3.905,829,1.936,830,1.936,831,2.917,832,2.917,833,2.917,834,1.936,835,1.936,836,1.936,837,1.936,838,1.936,839,2.917,840,1.936,841,3.509,842,1.936,843,1.936,844,1.936,845,1.936,846,2.917,847,1.936,848,1.936,849,1.936,850,2.917,851,1.936,852,1.936,853,2.917,854,2.917,855,1.936,856,1.936,857,1.936,858,2.917,859,1.936,860,1.936,861,1.936,862,1.936,863,1.936,864,1.936,865,1.936,866,1.936,867,1.936,868,1.936,869,2.917,870,1.936,871,1.936,872,1.936,873,1.936,874,1.936,875,1.936,876,2.917,877,2.917,878,1.936,879,1.936,880,1.936,881,1.936,882,1.936,883,1.936,884,1.936,885,1.936,886,1.936,887,1.936,888,1.936,889,1.936,890,1.936,891,1.936,892,2.917,893,1.936,894,1.936,895,1.936,896,1.936,897,1.936,898,1.936,899,1.936,900,1.936,901,1.936,902,1.936,903,1.936,904,1.936,905,1.936,906,1.936,907,1.936,908,1.936,909,1.936,910,1.936,911,1.936,912,2.917,913,1.936,914,1.936,915,1.936,916,1.936,917,3.509,918,1.936,919,1.936,920,1.936,921,1.936,922,1.936]],["title/modules.html",[2,1.517]],["body/modules.html",[1,2.492,2,1.69,11,1.915,12,0.042,13,2.177,14,1.915,65,0.036,66,0.042,67,0.036,144,4.349,198,2.438,923,5.37,924,5.37]],["title/overview.html",[403,2.237]],["body/overview.html",[0,0.851,1,3.219,2,1.412,3,1.247,4,1.818,5,1.818,6,1.412,7,1.818,8,1.818,9,2.853,10,2.853,11,2.446,12,0.048,13,2.899,14,2.362,15,2.278,16,1.818,17,1.102,22,1.599,47,1.58,64,0.3,65,0.03,66,0.038,67,0.03,69,1.599,105,1.484,135,2.853,136,2.853,137,2.853,190,2.188,250,2.188,366,2.188,403,2.082,432,2.853,434,2.853,474,2.411,512,2.853,513,2.853,667,2.853,925,3.523,926,4.414,927,3.523]],["title/miscellaneous/variables.html",[79,2.29,728,1.379]],["body/miscellaneous/variables.html",[0,1,12,0.046,20,0.353,65,0.035,66,0.042,67,0.035,79,2.834,94,1.617,96,0.872,120,2.834,140,1.295,191,1.14,307,1.659,316,1.659,383,1.659,385,2.137,439,3.333,509,3.353,529,2.834,701,3.353,728,2.447,928,4.14,929,4.14,930,4.14,931,4.14,932,4.14,933,4.14]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"controllers/PrerenderdAssetsController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":666,"title":{},"body":{"injectables/PreRenderingEngineService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":667,"title":{},"body":{"injectables/PreRenderingEngineService.html":{},"overview.html":{}}}],["1.7.4",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["14/16",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":926,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["3.0.0",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["30000",{"_index":470,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["4",{"_index":925,"title":{},"body":{"overview.html":{}}}],["4.1.2",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":427,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["404",{"_index":376,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["5",{"_index":927,"title":{},"body":{"overview.html":{}}}],["5.7.12",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":411,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["6.1.2",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":798,"title":{},"body":{"index.html":{}}}],["7/8",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":799,"title":{},"body":{"index.html":{}}}],["8.2.0",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["8080",{"_index":861,"title":{},"body":{"index.html":{}}}],["87",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":909,"title":{},"body":{"index.html":{}}}],["abort",{"_index":210,"title":{},"body":{"injectables/OptimizerService.html":{},"index.html":{}}}],["add",{"_index":399,"title":{},"body":{"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["added",{"_index":880,"title":{},"body":{"index.html":{}}}],["adding",{"_index":157,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["agent",{"_index":848,"title":{},"body":{"index.html":{}}}],["alot",{"_index":484,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["alter",{"_index":460,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["amount",{"_index":915,"title":{},"body":{"index.html":{}}}],["angular",{"_index":755,"title":{},"body":{"index.html":{}}}],["aot",{"_index":907,"title":{},"body":{"index.html":{}}}],["apache",{"_index":764,"title":{},"body":{"index.html":{}}}],["api",{"_index":502,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app",{"_index":174,"title":{},"body":{"injectables/LoggerService.html":{},"modules/PreRendererConfigModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["appears",{"_index":466,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["apply",{"_index":776,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":789,"title":{},"body":{"index.html":{}}}],["appservice",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["assets",{"_index":679,"title":{},"body":{"controllers/PrerenderdAssetsController.html":{}}}],["assets.controller",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["assets.controller.ts",{"_index":678,"title":{},"body":{"controllers/PrerenderdAssetsController.html":{},"coverage.html":{}}}],["assets/prerenderd",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"controllers/PrerenderdAssetsController.html":{},"coverage.html":{}}}],["async",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["attention",{"_index":186,"title":{},"body":{"injectables/LoggerService.html":{}}}],["attribute",{"_index":317,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["attributes",{"_index":293,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["available",{"_index":867,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":877,"title":{},"body":{"index.html":{}}}],["await",{"_index":239,"title":{},"body":{"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["base",{"_index":261,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"index.html":{}}}],["batch",{"_index":918,"title":{},"body":{"index.html":{}}}],["beast",{"_index":897,"title":{},"body":{"index.html":{}}}],["below",{"_index":865,"title":{},"body":{"index.html":{}}}],["beta",{"_index":744,"title":{},"body":{"index.html":{}}}],["beware",{"_index":489,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["big",{"_index":801,"title":{},"body":{"index.html":{}}}],["body",{"_index":361,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["boolean",{"_index":594,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["boostrap",{"_index":538,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["boot",{"_index":161,"title":{},"body":{"injectables/LoggerService.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bot",{"_index":811,"title":{},"body":{"index.html":{}}}],["both",{"_index":790,"title":{},"body":{"index.html":{}}}],["bots",{"_index":775,"title":{},"body":{"index.html":{}}}],["botuseragent",{"_index":543,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["broke",{"_index":173,"title":{},"body":{"injectables/LoggerService.html":{}}}],["browse",{"_index":924,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":198,"title":{},"body":{"injectables/OptimizerService.html":{},"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"injectables/PreRenderingEngineService.html":{},"index.html":{},"modules.html":{}}}],["browser.close",{"_index":657,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["browser.newpage",{"_index":648,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["browsers",{"_index":816,"title":{},"body":{"index.html":{}}}],["browsertab",{"_index":207,"title":{},"body":{"injectables/OptimizerService.html":{},"injectables/PreRenderingEngineService.html":{}}}],["browsertab.close",{"_index":656,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["browsertab.content",{"_index":655,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["browsertab.goto(url",{"_index":653,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["browsertab.on('request",{"_index":242,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["browsertab.setrequestinterception(true",{"_index":240,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["browsertab.setuseragent(this.botuseragent",{"_index":651,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["browsertab.waitfor(waitfor",{"_index":654,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["build",{"_index":753,"title":{},"body":{"index.html":{}}}],["building",{"_index":819,"title":{},"body":{"index.html":{}}}],["buildstart",{"_index":830,"title":{},"body":{"index.html":{}}}],["buisness",{"_index":494,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["called",{"_index":205,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["case",{"_index":83,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{}}}],["catch",{"_index":387,"title":{},"body":{"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["catch(error",{"_index":423,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["change",{"_index":862,"title":{},"body":{"index.html":{}}}],["changing",{"_index":778,"title":{},"body":{"index.html":{}}}],["check",{"_index":740,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["children",{"_index":516,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["choose",{"_index":216,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["chrome",{"_index":237,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["chromium",{"_index":844,"title":{},"body":{"index.html":{}}}],["circumstance",{"_index":298,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["claims",{"_index":806,"title":{},"body":{"index.html":{}}}],["class",{"_index":64,"title":{"classes/PreRenderRequestDTO.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"controllers/PrerenderdAssetsController.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":447,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["click",{"_index":863,"title":{},"body":{"index.html":{}}}],["client",{"_index":747,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":749,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":135,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":136,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":137,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_prerendererconfigmodule",{"_index":512,"title":{},"body":{"modules/PreRendererConfigModule.html":{},"overview.html":{}}}],["cluster_prerendererconfigmodule_exports",{"_index":513,"title":{},"body":{"modules/PreRendererConfigModule.html":{},"overview.html":{}}}],["cluster_prerendermodule",{"_index":432,"title":{},"body":{"modules/PreRenderModule.html":{},"overview.html":{}}}],["cluster_prerendermodule_imports",{"_index":433,"title":{},"body":{"modules/PreRenderModule.html":{}}}],["cluster_prerendermodule_providers",{"_index":434,"title":{},"body":{"modules/PreRenderModule.html":{},"overview.html":{}}}],["code",{"_index":158,"title":{},"body":{"injectables/LoggerService.html":{},"index.html":{}}}],["collision",{"_index":818,"title":{},"body":{"index.html":{}}}],["comes",{"_index":733,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["command",{"_index":522,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["comments",{"_index":768,"title":{},"body":{"index.html":{}}}],["comodofalcon",{"_index":743,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":765,"title":{},"body":{"index.html":{}}}],["compose",{"_index":899,"title":{},"body":{"index.html":{}}}],["compression",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["conf",{"_index":224,"title":{},"body":{"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"injectables/PreRenderingEngineService.html":{}}}],["config",{"_index":76,"title":{},"body":{"injectables/ConfigService.html":{},"modules/PreRendererConfigModule.html":{}}}],["config.module",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/PreRenderModule.html":{}}}],["config.module.ts",{"_index":514,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["config.ts",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["config/config",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["config/pre",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["configfilepath",{"_index":111,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configservice",{"_index":47,"title":{"injectables/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{},"overview.html":{}}}],["configservice(`${process.env.node_env",{"_index":540,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["configservice.get('enable_optimization",{"_index":609,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["configservice.get('launch_headless_browser",{"_index":613,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["configservice.get('mongodb_uri",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('user_agent_as_bot",{"_index":617,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["configservice.get('wait_for_starters').split",{"_index":615,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["configuration",{"_index":78,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configurations",{"_index":832,"title":{},"body":{"index.html":{}}}],["configure",{"_index":737,"title":{},"body":{"miscellaneous/functions.html":{}}}],["considerable",{"_index":914,"title":{},"body":{"index.html":{}}}],["const",{"_index":324,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["constantly",{"_index":777,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":102,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["constructor(configfilepath",{"_index":103,"title":{},"body":{"injectables/ConfigService.html":{}}}],["constructor(configservice",{"_index":201,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["constructor(pagemodel",{"_index":268,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["constructor(pagepersistanceservice",{"_index":556,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["consult",{"_index":739,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["contain",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contained",{"_index":482,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["contains",{"_index":254,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"index.html":{}}}],["content",{"_index":383,"title":{},"body":{"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["contentdescription",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control",{"_index":895,"title":{},"body":{"index.html":{}}}],["controller",{"_index":336,"title":{"controllers/PreRenderController.html":{},"controllers/PrerenderdAssetsController.html":{}},"body":{"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"controllers/PrerenderdAssetsController.html":{},"coverage.html":{}}}],["controller('pre",{"_index":372,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["controller('prerenderd",{"_index":680,"title":{},"body":{"controllers/PrerenderdAssetsController.html":{}}}],["controllers",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"controllers/PrerenderdAssetsController.html":{},"overview.html":{}}}],["coverage",{"_index":681,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crawlers",{"_index":781,"title":{},"body":{"index.html":{}}}],["create",{"_index":141,"title":{},"body":{"modules/LoggerModule.html":{},"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["crud",{"_index":258,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["csr",{"_index":793,"title":{},"body":{"index.html":{}}}],["dashborad",{"_index":894,"title":{},"body":{"index.html":{}}}],["data",{"_index":260,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["database",{"_index":318,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["date",{"_index":491,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["date().gettime",{"_index":629,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["date(prerenderedpage.lastprerenderingdate",{"_index":386,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["db",{"_index":825,"title":{},"body":{"index.html":{}}}],["decide",{"_index":567,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{},"overview.html":{}}}],["declares",{"_index":511,"title":{},"body":{"interfaces/PreRenderedPageModel.html":{}}}],["decorators",{"_index":346,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["default",{"_index":529,"title":{},"body":{"modules/PreRendererConfigModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":106,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"injectables/PreRenderingEngineService.html":{}}}],["delete",{"_index":274,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["delete('delete",{"_index":347,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["deletepagebyurl",{"_index":263,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["deletepagebyurl(url",{"_index":272,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["deletepersistedpagebyurl",{"_index":548,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["deletepersistedpagebyurl(url",{"_index":559,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["deleteprerenderedpagebyurl",{"_index":341,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["deleteprerenderedpagebyurl(@body",{"_index":428,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["deleteprerenderedpagebyurl(pagetodeleteurl",{"_index":345,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["deletes",{"_index":425,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":72,"title":{},"body":{"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"modules/PreRenderModule.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"modules/PreRendererConfigModule.html":{},"index.html":{}}}],["dev",{"_index":534,"title":{},"body":{"modules/PreRendererConfigModule.html":{},"index.html":{}}}],["devdependencies",{"_index":827,"title":{},"body":{"index.html":{}}}],["development'}.conf",{"_index":541,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["development.conf",{"_index":530,"title":{},"body":{"modules/PreRendererConfigModule.html":{},"index.html":{}}}],["directory",{"_index":532,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["disable",{"_index":219,"title":{},"body":{"injectables/OptimizerService.html":{},"index.html":{}}}],["disableressources",{"_index":200,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["disableressources(browsertab",{"_index":203,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["discovery",{"_index":882,"title":{},"body":{"index.html":{}}}],["dist",{"_index":535,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["docker",{"_index":898,"title":{},"body":{"index.html":{}}}],["doculentation",{"_index":857,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":682,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["dom",{"_index":461,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["dos",{"_index":903,"title":{},"body":{"index.html":{}}}],["dotenv",{"_index":124,"title":{},"body":{"injectables/ConfigService.html":{},"dependencies.html":{}}}],["dotenv.parse(fs.readfilesync(configfilepath",{"_index":128,"title":{},"body":{"injectables/ConfigService.html":{}}}],["down",{"_index":213,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["dtos/prerenderedpagedatadto",{"_index":371,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["dtos/prerenderedpagedatadto.ts",{"_index":475,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"coverage.html":{}}}],["dtos/prerenderrequestdto",{"_index":365,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["dtos/prerenderrequestdto.ts",{"_index":448,"title":{},"body":{"classes/PreRenderRequestDTO.html":{},"coverage.html":{}}}],["dtos/prerenderrequestdto.ts:14",{"_index":472,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["dtos/prerenderrequestdto.ts:29",{"_index":450,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["dump",{"_index":920,"title":{},"body":{"index.html":{}}}],["dynamically",{"_index":462,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["each",{"_index":846,"title":{},"body":{"index.html":{}}}],["element",{"_index":465,"title":{},"body":{"classes/PreRenderRequestDTO.html":{},"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["elements",{"_index":467,"title":{},"body":{"classes/PreRenderRequestDTO.html":{},"index.html":{}}}],["elementtowaitfor",{"_index":414,"title":{},"body":{"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"injectables/PreRenderingEngineService.html":{}}}],["enable",{"_index":234,"title":{},"body":{"injectables/OptimizerService.html":{},"index.html":{}}}],["enable_optimization",{"_index":600,"title":{},"body":{"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["enabled",{"_index":619,"title":{},"body":{"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["end",{"_index":761,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":407,"title":{},"body":{"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["engine",{"_index":497,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"index.html":{}}}],["engine.service",{"_index":369,"title":{},"body":{"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{}}}],["engine.service.ts",{"_index":542,"title":{},"body":{"injectables/PreRenderingEngineService.html":{},"coverage.html":{}}}],["engine.service.ts:11",{"_index":557,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["engine.service.ts:118",{"_index":561,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["engine.service.ts:128",{"_index":560,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["engine.service.ts:139",{"_index":566,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["engine.service.ts:161",{"_index":569,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["engine.service.ts:174",{"_index":579,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["engine.service.ts:215",{"_index":585,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["engine.service.ts:242",{"_index":589,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["engine.service.ts:35",{"_index":599,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["engine.service.ts:42",{"_index":595,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["engine.service.ts:49",{"_index":597,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["engine.service.ts:56",{"_index":591,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["engine.service.ts:63",{"_index":601,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["engine.service.ts:71",{"_index":564,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["engine.service.ts:83",{"_index":572,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["engine/pre",{"_index":368,"title":{},"body":{"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{}}}],["envconfig",{"_index":100,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment",{"_index":223,"title":{},"body":{"injectables/OptimizerService.html":{},"modules/PreRendererConfigModule.html":{}}}],["err",{"_index":661,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["err.trace",{"_index":663,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["error",{"_index":164,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["error(`the",{"_index":334,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["error(message",{"_index":166,"title":{},"body":{"injectables/LoggerService.html":{}}}],["error.message",{"_index":430,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["errors",{"_index":574,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["eureka",{"_index":881,"title":{},"body":{"index.html":{}}}],["even",{"_index":805,"title":{},"body":{"index.html":{}}}],["evil",{"_index":171,"title":{},"body":{"injectables/LoggerService.html":{}}}],["example",{"_index":95,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{}}}],["exception",{"_index":412,"title":{},"body":{"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{}}}],["exceptionn",{"_index":377,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["exceptions",{"_index":912,"title":{},"body":{"index.html":{}}}],["execute",{"_index":804,"title":{},"body":{"index.html":{}}}],["exist",{"_index":672,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["existing",{"_index":122,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/PersistanceLayerService.html":{}}}],["exists",{"_index":335,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["export",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"controllers/PrerenderdAssetsController.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{},"overview.html":{}}}],["exposed",{"_index":300,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["express",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":163,"title":{},"body":{"injectables/LoggerService.html":{}}}],["external",{"_index":437,"title":{},"body":{"modules/PreRenderModule.html":{}}}],["extract",{"_index":118,"title":{},"body":{"injectables/ConfigService.html":{}}}],["extracted",{"_index":85,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/PreRenderingEngineService.html":{}}}],["fact",{"_index":780,"title":{},"body":{"index.html":{}}}],["fail",{"_index":537,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["false",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["faster",{"_index":485,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["favor",{"_index":800,"title":{},"body":{"index.html":{}}}],["feature",{"_index":299,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["feign",{"_index":879,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":279,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"modules/PreRendererConfigModule.html":{},"index.html":{}}}],["fetched",{"_index":455,"title":{},"body":{"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["fetches",{"_index":812,"title":{},"body":{"index.html":{}}}],["fetching",{"_index":390,"title":{},"body":{"controllers/PreRenderController.html":{},"index.html":{}}}],["field",{"_index":507,"title":{},"body":{"interfaces/PreRenderedPageModel.html":{}}}],["fields",{"_index":839,"title":{},"body":{"index.html":{}}}],["fieldstorender",{"_index":284,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"controllers/PrerenderdAssetsController.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":487,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["final",{"_index":871,"title":{},"body":{"index.html":{}}}],["first",{"_index":415,"title":{},"body":{"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{}}}],["fixme",{"_index":875,"title":{},"body":{"index.html":{}}}],["fo",{"_index":458,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["folder",{"_index":833,"title":{},"body":{"index.html":{}}}],["following",{"_index":232,"title":{},"body":{"injectables/OptimizerService.html":{},"modules/PreRendererConfigModule.html":{}}}],["force",{"_index":209,"title":{},"body":{"injectables/OptimizerService.html":{},"classes/PreRenderRequestDTO.html":{}}}],["form",{"_index":374,"title":{},"body":{"controllers/PreRenderController.html":{},"index.html":{}}}],["format",{"_index":492,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{}}}],["found",{"_index":222,"title":{},"body":{"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{}}}],["framework",{"_index":756,"title":{},"body":{"index.html":{}}}],["friendly",{"_index":477,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{}}}],["fs",{"_index":125,"title":{},"body":{"injectables/ConfigService.html":{}}}],["full",{"_index":495,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["function",{"_index":208,"title":{},"body":{"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":576,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/PreRenderingEngineService.html":{},"miscellaneous/functions.html":{}}}],["generate",{"_index":766,"title":{},"body":{"index.html":{}}}],["generated",{"_index":859,"title":{},"body":{"index.html":{}}}],["get('get",{"_index":350,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["get('ressources_to_disable",{"_index":228,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["get(key",{"_index":112,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getallprerenderedpages",{"_index":264,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"injectables/PreRenderingEngineService.html":{}}}],["getpagebyurlandproject",{"_index":265,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["getpagebyurlandproject(url",{"_index":283,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["getpageurl",{"_index":355,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["getpageurl.url",{"_index":395,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["getprenderedpagesbyinput",{"_index":342,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["getprenderedpagesbyurl",{"_index":343,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["getprenderedpagesbyurl(getpageurl",{"_index":352,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["getprerenderedpagebyurl",{"_index":549,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["getprerenderedpagebyurl(url",{"_index":563,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["gets",{"_index":373,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["getting",{"_index":741,"title":{"index.html":{}},"body":{}}],["given",{"_index":206,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["google",{"_index":774,"title":{},"body":{"index.html":{}}}],["gui",{"_index":845,"title":{},"body":{"index.html":{}}}],["half",{"_index":802,"title":{},"body":{"index.html":{}}}],["hand",{"_index":787,"title":{},"body":{"index.html":{}}}],["handle",{"_index":922,"title":{},"body":{"index.html":{}}}],["handlepagepersistance",{"_index":550,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["handlepagepersistance(page",{"_index":565,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["handler",{"_index":763,"title":{},"body":{"index.html":{}}}],["handler.service",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/PreRenderModule.html":{}}}],["handler/ressource",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/PreRenderModule.html":{}}}],["happen",{"_index":406,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["headless",{"_index":646,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["heart_eyes",{"_index":759,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":855,"title":{},"body":{"index.html":{}}}],["here",{"_index":152,"title":{},"body":{"injectables/LoggerService.html":{},"index.html":{}}}],["high",{"_index":760,"title":{},"body":{"index.html":{}}}],["holds",{"_index":313,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["host",{"_index":860,"title":{},"body":{"index.html":{}}}],["hrstart",{"_index":649,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["http://uat",{"_index":401,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["http://www.egybest.com",{"_index":392,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["httpexception",{"_index":363,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["httpexception(`no",{"_index":388,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["httpstatus",{"_index":364,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["httpstatus.bad_request",{"_index":431,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["httpstatus.internal_server_error",{"_index":424,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["httpstatus.not_found",{"_index":391,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["id",{"_index":305,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["identification",{"_index":906,"title":{},"body":{"index.html":{}}}],["identified",{"_index":902,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":306,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"classes/PreRenderRequestDTO.html":{},"index.html":{}}}],["identify_as_bot",{"_index":596,"title":{},"body":{"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["identifyasbot",{"_index":544,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["images",{"_index":215,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["implement",{"_index":884,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":734,"title":{},"body":{"miscellaneous/functions.html":{}}}],["implemented",{"_index":90,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["import",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"controllers/PrerenderdAssetsController.html":{}}}],["imported",{"_index":515,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["imports",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/PreRenderModule.html":{}}}],["increadible",{"_index":767,"title":{},"body":{"index.html":{}}}],["index",{"_index":96,"title":{"index.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":773,"title":{},"body":{"index.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"controllers/PrerenderdAssetsController.html":{}}}],["info(message",{"_index":177,"title":{},"body":{"injectables/LoggerService.html":{}}}],["inject",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":68,"title":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"injectables/PreRenderingEngineService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{}}}],["injectables",{"_index":69,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"injectables/PreRenderingEngineService.html":{},"overview.html":{}}}],["injected",{"_index":115,"title":{},"body":{"injectables/ConfigService.html":{}}}],["injectmodel",{"_index":319,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["injectmodel('prerenderedpages",{"_index":321,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["input",{"_index":449,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["install",{"_index":826,"title":{},"body":{"index.html":{}}}],["installation",{"_index":821,"title":{},"body":{"index.html":{}}}],["installbuild",{"_index":829,"title":{},"body":{"index.html":{}}}],["instance",{"_index":82,"title":{},"body":{"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"index.html":{}}}],["insuring",{"_index":873,"title":{},"body":{"index.html":{}}}],["integrity",{"_index":886,"title":{},"body":{"index.html":{}}}],["interception",{"_index":236,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["interface",{"_index":473,"title":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":474,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"overview.html":{}}}],["issue",{"_index":786,"title":{},"body":{"index.html":{}}}],["issues",{"_index":405,"title":{},"body":{"controllers/PreRenderController.html":{},"index.html":{}}}],["it's",{"_index":398,"title":{},"body":{"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["itresting",{"_index":151,"title":{},"body":{"injectables/LoggerService.html":{}}}],["javascript",{"_index":459,"title":{},"body":{"classes/PreRenderRequestDTO.html":{},"index.html":{}}}],["js",{"_index":156,"title":{},"body":{"injectables/LoggerService.html":{},"index.html":{}}}],["json.parse",{"_index":608,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["json.parse(configservice.get('identify_as_bot",{"_index":611,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["json.parse(configservice.get('query_url_only",{"_index":323,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["key",{"_index":116,"title":{},"body":{"injectables/ConfigService.html":{}}}],["large",{"_index":488,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["lastprerenderingdate",{"_index":385,"title":{},"body":{"controllers/PreRenderController.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":146,"title":{},"body":{"modules/LoggerModule.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["launch",{"_index":647,"title":{},"body":{"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["launch_headless_browser",{"_index":598,"title":{},"body":{"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["launched",{"_index":868,"title":{},"body":{"index.html":{}}}],["launchheadlessbrowser",{"_index":545,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["launching",{"_index":856,"title":{},"body":{"index.html":{}}}],["layer.service",{"_index":441,"title":{},"body":{"modules/PreRenderModule.html":{},"injectables/PreRenderingEngineService.html":{}}}],["layer.service.ts",{"_index":253,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"coverage.html":{}}}],["layer.service.ts:15",{"_index":270,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["layer.service.ts:31",{"_index":312,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["layer.service.ts:39",{"_index":310,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["layer.service.ts:51",{"_index":303,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["layer.service.ts:63",{"_index":278,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["layer.service.ts:75",{"_index":285,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["layer.service.ts:93",{"_index":273,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["layer/persistance",{"_index":252,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"modules/PreRenderModule.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{},"overview.html":{}}}],["length",{"_index":670,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["levels",{"_index":159,"title":{},"body":{"injectables/LoggerService.html":{}}}],["licensed",{"_index":758,"title":{},"body":{"index.html":{}}}],["light",{"_index":750,"title":{},"body":{"index.html":{}}}],["list",{"_index":850,"title":{},"body":{"index.html":{}}}],["load",{"_index":77,"title":{},"body":{"injectables/ConfigService.html":{}}}],["log",{"_index":169,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logger",{"_index":104,"title":{},"body":{"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"injectables/PreRenderingEngineService.html":{}}}],["logger.info",{"_index":230,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["logger.info(`rendering",{"_index":618,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["logger.services/logger.service",{"_index":148,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule",{"_index":11,"title":{"modules/LoggerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules/PreRenderModule.html":{},"modules.html":{},"overview.html":{}}}],["loggerservice",{"_index":105,"title":{"injectables/LoggerService.html":{}},"body":{"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{},"overview.html":{}}}],["logging",{"_index":142,"title":{},"body":{"modules/LoggerModule.html":{},"injectables/LoggerService.html":{}}}],["logo",{"_index":864,"title":{},"body":{"index.html":{}}}],["logs",{"_index":582,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["lol",{"_index":153,"title":{},"body":{"injectables/LoggerService.html":{}}}],["made",{"_index":817,"title":{},"body":{"index.html":{}}}],["main.js",{"_index":525,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["mainly",{"_index":139,"title":{},"body":{"modules/LoggerModule.html":{}}}],["make",{"_index":498,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["manage",{"_index":436,"title":{},"body":{"modules/PreRenderModule.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["many",{"_index":404,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["marked",{"_index":508,"title":{},"body":{"interfaces/PreRenderedPageModel.html":{}}}],["matching",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"controllers/PrerenderdAssetsController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matters",{"_index":797,"title":{},"body":{"index.html":{}}}],["maximum",{"_index":813,"title":{},"body":{"index.html":{}}}],["maybe",{"_index":888,"title":{},"body":{"index.html":{}}}],["mechanism",{"_index":901,"title":{},"body":{"index.html":{}}}],["mechansim",{"_index":143,"title":{},"body":{"modules/LoggerModule.html":{}}}],["memberof",{"_index":132,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{}}}],["memory",{"_index":295,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"index.html":{}}}],["message",{"_index":175,"title":{},"body":{"injectables/LoggerService.html":{}}}],["messages",{"_index":921,"title":{},"body":{"index.html":{}}}],["messaging",{"_index":919,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":101,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["microservice",{"_index":752,"title":{},"body":{"index.html":{}}}],["migration",{"_index":908,"title":{},"body":{"index.html":{}}}],["minimimal",{"_index":570,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["minimize",{"_index":893,"title":{},"body":{"index.html":{}}}],["minotore",{"_index":788,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":728,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":757,"title":{},"body":{"index.html":{}}}],["mode",{"_index":831,"title":{},"body":{"index.html":{}}}],["model",{"_index":269,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["models/prerenderedpagemodel",{"_index":320,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":453,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["mongo",{"_index":289,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"index.html":{}}}],["mongodb",{"_index":769,"title":{},"body":{"index.html":{}}}],["mongodb_uri",{"_index":843,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":256,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/PreRenderModule.html":{}}}],["mongoosemodule.forfeature",{"_index":445,"title":{},"body":{"modules/PreRenderModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":463,"title":{},"body":{"classes/PreRenderRequestDTO.html":{},"index.html":{}}}],["much",{"_index":783,"title":{},"body":{"index.html":{}}}],["mvc",{"_index":794,"title":{},"body":{"index.html":{}}}],["name",{"_index":109,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["named",{"_index":526,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["name}.conf",{"_index":527,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["necessary",{"_index":211,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["need",{"_index":815,"title":{},"body":{"index.html":{}}}],["needs",{"_index":184,"title":{},"body":{"injectables/LoggerService.html":{}}}],["nest",{"_index":155,"title":{},"body":{"injectables/LoggerService.html":{},"index.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"controllers/PrerenderdAssetsController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"injectables/PersistanceLayerService.html":{},"modules/PreRenderModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":307,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newpage",{"_index":325,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["newpage.save",{"_index":327,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["node",{"_index":524,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["node.js",{"_index":823,"title":{},"body":{"index.html":{}}}],["node_env=development",{"_index":834,"title":{},"body":{"index.html":{}}}],["node_env=production",{"_index":837,"title":{},"body":{"index.html":{}}}],["node_env={environment",{"_index":523,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["notes",{"_index":911,"title":{},"body":{"index.html":{}}}],["nothing",{"_index":150,"title":{},"body":{"injectables/LoggerService.html":{},"controllers/PreRenderController.html":{}}}],["notification",{"_index":900,"title":{},"body":{"index.html":{}}}],["npm",{"_index":828,"title":{},"body":{"index.html":{}}}],["number",{"_index":509,"title":{},"body":{"interfaces/PreRenderedPageModel.html":{},"miscellaneous/variables.html":{}}}],["occured",{"_index":389,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["once",{"_index":114,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["one",{"_index":669,"title":{},"body":{"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["ones",{"_index":185,"title":{},"body":{"injectables/LoggerService.html":{}}}],["operations",{"_index":259,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["optimization",{"_index":296,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"index.html":{}}}],["optimize",{"_index":854,"title":{},"body":{"index.html":{}}}],["optimizer",{"_index":193,"title":{},"body":{"injectables/OptimizerService.html":{},"injectables/PreRenderingEngineService.html":{}}}],["optimizer/optimizer.service",{"_index":606,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["optimizerenabled",{"_index":546,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["optimizerservice",{"_index":190,"title":{"injectables/OptimizerService.html":{}},"body":{"injectables/OptimizerService.html":{},"modules/PreRenderModule.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{},"overview.html":{}}}],["optional",{"_index":110,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":517,"title":{},"body":{"modules/PreRendererConfigModule.html":{},"index.html":{}}}],["otherwise",{"_index":501,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules/PreRenderModule.html":{},"classes/PreRenderRequestDTO.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":887,"title":{},"body":{"index.html":{}}}],["outputs",{"_index":891,"title":{},"body":{"index.html":{}}}],["outs",{"_index":878,"title":{},"body":{"index.html":{}}}],["overriding",{"_index":154,"title":{},"body":{"injectables/LoggerService.html":{}}}],["overview",{"_index":403,"title":{"overview.html":{}},"body":{"controllers/PreRenderController.html":{},"index.html":{},"overview.html":{}}}],["p",{"_index":736,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["package",{"_index":704,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":195,"title":{},"body":{"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["pagedatabaseid",{"_index":331,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["pagedatabaseid.id",{"_index":332,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["pageifpersisted",{"_index":551,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["pageifpersisted(url",{"_index":568,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["pagemodel",{"_index":271,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["pagepersistanceservice",{"_index":558,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["pages",{"_index":281,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["pageschema",{"_index":439,"title":{},"body":{"modules/PreRenderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagetodeleteurl",{"_index":349,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["pageurl",{"_index":316,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":131,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["parameters",{"_index":108,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":75,"title":{},"body":{"injectables/ConfigService.html":{}}}],["parsed",{"_index":231,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["people",{"_index":172,"title":{},"body":{"injectables/LoggerService.html":{}}}],["performance",{"_index":294,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["persist",{"_index":308,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"injectables/PreRenderingEngineService.html":{}}}],["persistance",{"_index":605,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["persistancelayerservice",{"_index":250,"title":{"injectables/PersistanceLayerService.html":{}},"body":{"injectables/PersistanceLayerService.html":{},"modules/PreRenderModule.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{},"overview.html":{}}}],["persistedpage",{"_index":636,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["persistedpage.id",{"_index":642,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["persistedprerenderedpagedata",{"_index":630,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["platform",{"_index":771,"title":{},"body":{"index.html":{}}}],["poc",{"_index":870,"title":{},"body":{"index.html":{}}}],["port",{"_index":841,"title":{},"body":{"index.html":{}}}],["possible",{"_index":814,"title":{},"body":{"index.html":{}}}],["post",{"_index":362,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["post('get",{"_index":353,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["post('pre",{"_index":358,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["pre",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["prefix",{"_index":339,"title":{},"body":{"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"controllers/PrerenderdAssetsController.html":{}}}],["prefixes",{"_index":851,"title":{},"body":{"index.html":{}}}],["preform",{"_index":257,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["prerenderandpersistpage",{"_index":552,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["prerenderandpersistpage(prerenderpagedto.pageurl",{"_index":419,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["prerenderandpersistpage(url",{"_index":571,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["prerendercontroller",{"_index":337,"title":{"controllers/PreRenderController.html":{}},"body":{"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"coverage.html":{}}}],["prerenderd",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"controllers/PrerenderdAssetsController.html":{}}}],["prerenderdassetscontroller",{"_index":23,"title":{"controllers/PrerenderdAssetsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/PrerenderdAssetsController.html":{},"coverage.html":{}}}],["prerendered",{"_index":506,"title":{},"body":{"interfaces/PreRenderedPageModel.html":{}}}],["prerenderedpage",{"_index":393,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["prerenderedpage.content",{"_index":384,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["prerenderedpage.pageurl",{"_index":382,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["prerenderedpagedata",{"_index":628,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["prerenderedpagedatadto",{"_index":370,"title":{"interfaces/PreRenderedPageDataDTO.html":{}},"body":{"controllers/PreRenderController.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"coverage.html":{}}}],["prerenderedpagemodel",{"_index":302,"title":{"interfaces/PreRenderedPageModel.html":{}},"body":{"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{}}}],["prerenderedpages",{"_index":378,"title":{},"body":{"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{}}}],["prerenderedpages.map(prerenderedpage",{"_index":381,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["prerendererconfigmodule",{"_index":14,"title":{"modules/PreRendererConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["prerendering",{"_index":496,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["prerenderingengineservice",{"_index":366,"title":{"injectables/PreRenderingEngineService.html":{}},"body":{"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{},"overview.html":{}}}],["prerendermodule",{"_index":13,"title":{"modules/PreRenderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PreRenderModule.html":{},"modules.html":{},"overview.html":{}}}],["prerenderpage",{"_index":553,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["prerenderpage(url",{"_index":577,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["prerenderpagedto",{"_index":360,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["prerenderpagedto.elementtowaitfor",{"_index":420,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["prerenderrequestdto",{"_index":357,"title":{"classes/PreRenderRequestDTO.html":{}},"body":{"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"coverage.html":{}}}],["prerenderwebpage",{"_index":344,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["prerenderwebpage(@body",{"_index":417,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["prerenderwebpage(prerenderpagedto",{"_index":356,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["previous",{"_index":639,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["private",{"_index":98,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["problematic:for",{"_index":770,"title":{},"body":{"index.html":{}}}],["process",{"_index":89,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/OptimizerService.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"index.html":{}}}],["process.env.node_env",{"_index":519,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["process.hrtime",{"_index":650,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["process.hrtime(hrstart",{"_index":659,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["processes",{"_index":791,"title":{},"body":{"index.html":{}}}],["processing",{"_index":913,"title":{},"body":{"index.html":{}}}],["processor",{"_index":885,"title":{},"body":{"index.html":{}}}],["production",{"_index":536,"title":{},"body":{"modules/PreRendererConfigModule.html":{},"index.html":{}}}],["production.conf",{"_index":836,"title":{},"body":{"index.html":{}}}],["programatic",{"_index":762,"title":{},"body":{"index.html":{}}}],["project",{"_index":315,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"index.html":{}}}],["projection",{"_index":290,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"index.html":{}}}],["promise",{"_index":282,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["promise(async",{"_index":621,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["properties",{"_index":97,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{}}}],["provide",{"_index":179,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/PersistanceLayerService.html":{},"modules/PreRendererConfigModule.html":{},"index.html":{}}}],["provided",{"_index":121,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"modules/PreRendererConfigModule.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{},"overview.html":{}}}],["provied",{"_index":276,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["puppeteer",{"_index":604,"title":{},"body":{"injectables/PreRenderingEngineService.html":{},"dependencies.html":{},"index.html":{}}}],["puppetter",{"_index":603,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["puppetter.launch",{"_index":645,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["query",{"_index":853,"title":{},"body":{"index.html":{}}}],["query_url_only",{"_index":314,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"index.html":{}}}],["queryurlonly",{"_index":262,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["raise",{"_index":469,"title":{},"body":{"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["ranked",{"_index":808,"title":{},"body":{"index.html":{}}}],["ratio",{"_index":795,"title":{},"body":{"index.html":{}}}],["reader",{"_index":180,"title":{},"body":{"injectables/LoggerService.html":{}}}],["readonly",{"_index":99,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"injectables/PreRenderingEngineService.html":{}}}],["receives",{"_index":416,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["record",{"_index":123,"title":{},"body":{"injectables/ConfigService.html":{}}}],["redered",{"_index":493,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["redner",{"_index":287,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["reduce",{"_index":194,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["reflect",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["refrenced",{"_index":803,"title":{},"body":{"index.html":{}}}],["reject",{"_index":622,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["reject(err",{"_index":664,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["reject(error",{"_index":633,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["rejects",{"_index":573,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["render",{"_index":340,"title":{},"body":{"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["render.controller",{"_index":438,"title":{},"body":{"modules/PreRenderModule.html":{}}}],["render.controller.ts",{"_index":338,"title":{},"body":{"controllers/PreRenderController.html":{},"coverage.html":{}}}],["render.controller.ts:110",{"_index":348,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["render.controller.ts:29",{"_index":351,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["render.controller.ts:54",{"_index":354,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["render.controller.ts:82",{"_index":359,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["render.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["render.module.ts",{"_index":435,"title":{},"body":{"modules/PreRenderModule.html":{}}}],["renderd",{"_index":480,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{}}}],["rendered",{"_index":280,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["renderer",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{}}}],["renderer/models/prerenderedpagemodel.ts",{"_index":503,"title":{},"body":{"interfaces/PreRenderedPageModel.html":{},"coverage.html":{}}}],["renderer/pre",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{}}}],["renderer/schemas/page.schema.ts",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["renderign",{"_index":916,"title":{},"body":{"index.html":{}}}],["rendering",{"_index":196,"title":{},"body":{"injectables/OptimizerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{},"index.html":{}}}],["renderinga",{"_index":581,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["renders",{"_index":451,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["renerder",{"_index":479,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{}}}],["report",{"_index":883,"title":{},"body":{"index.html":{}}}],["reporting",{"_index":145,"title":{},"body":{"modules/LoggerModule.html":{},"index.html":{}}}],["representation",{"_index":478,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{}}}],["represents",{"_index":504,"title":{},"body":{"interfaces/PreRenderedPageModel.html":{}}}],["req",{"_index":243,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["req.abort",{"_index":247,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["req.continue",{"_index":249,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["req.resourcetype",{"_index":248,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["req.url",{"_index":246,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["request",{"_index":235,"title":{},"body":{"injectables/OptimizerService.html":{},"index.html":{}}}],["requested",{"_index":241,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["requesting",{"_index":849,"title":{},"body":{"index.html":{}}}],["requests",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"injectables/OptimizerService.html":{},"modules/PreRenderModule.html":{}}}],["required",{"_index":91,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["requires",{"_index":822,"title":{},"body":{"index.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{},"overview.html":{}}}],["resolve",{"_index":587,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["resolve(persistedprerenderedpagedata",{"_index":632,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["resolve(tabcontent",{"_index":660,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["resolved",{"_index":422,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["resolvewaitfor",{"_index":554,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["resolvewaitfor(waitfor",{"_index":584,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["resource",{"_index":454,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["responsible",{"_index":580,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["ressource",{"_index":217,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["ressourcerequestshandlerservice",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/PreRenderModule.html":{}}}],["ressources",{"_index":233,"title":{},"body":{"injectables/OptimizerService.html":{},"index.html":{}}}],["ressources_to_disable",{"_index":221,"title":{},"body":{"injectables/OptimizerService.html":{},"index.html":{}}}],["ressourcestodisable",{"_index":199,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["restful",{"_index":732,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["result",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"controllers/PrerenderdAssetsController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"controllers/PrerenderdAssetsController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retreive",{"_index":291,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["retreives",{"_index":562,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["return",{"_index":133,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["returns",{"_index":119,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["rimraf",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["rmq",{"_index":876,"title":{},"body":{"index.html":{}}}],["robustness",{"_index":874,"title":{},"body":{"index.html":{}}}],["root",{"_index":531,"title":{},"body":{"modules/PreRendererConfigModule.html":{},"index.html":{}}}],["rules",{"_index":779,"title":{},"body":{"index.html":{}}}],["run",{"_index":521,"title":{},"body":{"modules/PreRendererConfigModule.html":{},"index.html":{}}}],["rxjs",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":858,"title":{},"body":{"index.html":{}}}],["save",{"_index":400,"title":{},"body":{"controllers/PreRenderController.html":{},"index.html":{}}}],["schema",{"_index":446,"title":{},"body":{"modules/PreRenderModule.html":{}}}],["schemas",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemas/page.schema",{"_index":440,"title":{},"body":{"modules/PreRenderModule.html":{}}}],["screen",{"_index":889,"title":{},"body":{"index.html":{}}}],["secs",{"_index":471,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["see",{"_index":782,"title":{},"body":{"index.html":{}}}],["seeyond.minotore.com/fr/en/pro/products/3307",{"_index":426,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["seeyond.minotore.com/fr/en/pro/products/3307\",\"elementtowaitfor",{"_index":402,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["self",{"_index":847,"title":{},"body":{"index.html":{}}}],["seo",{"_index":746,"title":{},"body":{"index.html":{}}}],["served",{"_index":842,"title":{},"body":{"index.html":{}}}],["server",{"_index":820,"title":{},"body":{"index.html":{}}}],["server_port",{"_index":840,"title":{},"body":{"index.html":{}}}],["service",{"_index":74,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"modules/PreRenderModule.html":{},"index.html":{}}}],["service.service",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{}}}],["service.service.ts",{"_index":71,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["service.service.ts:17",{"_index":107,"title":{},"body":{"injectables/ConfigService.html":{}}}],["service.service.ts:29",{"_index":113,"title":{},"body":{"injectables/ConfigService.html":{}}}],["service/config",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{}}}],["services/optimizer/optimizer.service",{"_index":442,"title":{},"body":{"modules/PreRenderModule.html":{}}}],["services/optimizer/optimizer.service.ts",{"_index":192,"title":{},"body":{"injectables/OptimizerService.html":{},"coverage.html":{}}}],["services/optimizer/optimizer.service.ts:11",{"_index":202,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["services/optimizer/optimizer.service.ts:23",{"_index":225,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["services/optimizer/optimizer.service.ts:34",{"_index":204,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["services/persistance",{"_index":251,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"modules/PreRenderModule.html":{},"coverage.html":{}}}],["services/pre",{"_index":367,"title":{},"body":{"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{}}}],["services/ressource",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/PreRenderModule.html":{}}}],["set",{"_index":518,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["sheets",{"_index":214,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["shots",{"_index":890,"title":{},"body":{"index.html":{}}}],["side",{"_index":748,"title":{},"body":{"index.html":{}}}],["simple",{"_index":810,"title":{},"body":{"index.html":{}}}],["simply",{"_index":410,"title":{},"body":{"controllers/PreRenderController.html":{},"index.html":{}}}],["single",{"_index":81,"title":{},"body":{"injectables/ConfigService.html":{},"modules/LoggerModule.html":{}}}],["size",{"_index":490,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["slow",{"_index":212,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["solution",{"_index":809,"title":{},"body":{"index.html":{}}}],["solve",{"_index":745,"title":{},"body":{"index.html":{}}}],["sometimes",{"_index":807,"title":{},"body":{"index.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{},"controllers/PrerenderdAssetsController.html":{}}}],["specific",{"_index":292,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["specified",{"_index":80,"title":{},"body":{"injectables/ConfigService.html":{},"modules/PreRendererConfigModule.html":{}}}],["split",{"_index":229,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["spring",{"_index":160,"title":{},"body":{"injectables/LoggerService.html":{},"index.html":{}}}],["src",{"_index":533,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["src/.../main.ts",{"_index":729,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../page.schema.ts",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger",{"_index":730,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/config",{"_index":70,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{}}}],["src/config/pre",{"_index":443,"title":{},"body":{"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{}}}],["src/config/swagger",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/logger/logger.module",{"_index":444,"title":{},"body":{"modules/PreRenderModule.html":{}}}],["src/logger/logger.module.ts",{"_index":138,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/logger/logger.services/logger.service",{"_index":126,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"modules/PreRendererConfigModule.html":{},"injectables/PreRenderingEngineService.html":{}}}],["src/logger/logger.services/logger.service.ts",{"_index":149,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/logger/logger.services/logger.service.ts:19",{"_index":168,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/logger/logger.services/logger.service.ts:28",{"_index":182,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/logger/logger.services/logger.service.ts:37",{"_index":178,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/main.ts",{"_index":693,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/pre",{"_index":191,"title":{},"body":{"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"modules/PreRenderModule.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prerenderd",{"_index":677,"title":{},"body":{"controllers/PrerenderdAssetsController.html":{},"coverage.html":{}}}],["ssr",{"_index":792,"title":{},"body":{"index.html":{}}}],["start",{"_index":668,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["start:devstart",{"_index":835,"title":{},"body":{"index.html":{}}}],["start:prod.conf",{"_index":838,"title":{},"body":{"index.html":{}}}],["started",{"_index":742,"title":{"index.html":{}},"body":{"index.html":{}}}],["stateful",{"_index":73,"title":{},"body":{"injectables/ConfigService.html":{}}}],["statements",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["steps",{"_index":872,"title":{},"body":{"index.html":{}}}],["stirngisvalid",{"_index":555,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["stirngisvalid(stringvalue",{"_index":588,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["stop",{"_index":452,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["stored",{"_index":486,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["string",{"_index":94,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{},"miscellaneous/variables.html":{}}}],["stringvalue",{"_index":590,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["stringvalue.length",{"_index":674,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["stringvalue.tostring",{"_index":675,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["structure",{"_index":505,"title":{},"body":{"interfaces/PreRenderedPageModel.html":{}}}],["style",{"_index":162,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{}}}],["sub",{"_index":575,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["such",{"_index":671,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["super.error(`[error",{"_index":187,"title":{},"body":{"injectables/LoggerService.html":{}}}],["super.log(`[info",{"_index":189,"title":{},"body":{"injectables/LoggerService.html":{}}}],["super.warn(`[warn",{"_index":188,"title":{},"body":{"injectables/LoggerService.html":{}}}],["support",{"_index":144,"title":{},"body":{"modules/LoggerModule.html":{},"modules.html":{}}}],["supposed",{"_index":735,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sure",{"_index":499,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["svg",{"_index":923,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":725,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["swaggerconfigurer",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["swaggerconfigurer(app",{"_index":731,"title":{},"body":{"miscellaneous/functions.html":{}}}],["system",{"_index":528,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["tab",{"_index":238,"title":{},"body":{"injectables/OptimizerService.html":{},"injectables/PreRenderingEngineService.html":{}}}],["tabcontent",{"_index":626,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["table",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":468,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["tags",{"_index":905,"title":{},"body":{"index.html":{}}}],["taken",{"_index":583,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["takes",{"_index":785,"title":{},"body":{"index.html":{}}}],["tell",{"_index":170,"title":{},"body":{"injectables/LoggerService.html":{}}}],["thanks",{"_index":220,"title":{},"body":{"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"classes/PreRenderRequestDTO.html":{},"index.html":{}}}],["then(resolved",{"_index":421,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["this.botuseragent",{"_index":616,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.configservice",{"_index":227,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["this.envconfig",{"_index":127,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.envconfig[key",{"_index":134,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.handlepagepersistance",{"_index":631,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.identifyasbot",{"_index":610,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.launchheadlessbrowser",{"_index":612,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.logger.error(err",{"_index":662,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.logger.info('found",{"_index":638,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.logger.info('no",{"_index":643,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.logger.info(`aborting",{"_index":245,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["this.logger.info(`launching",{"_index":129,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.info(`took",{"_index":658,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.logger.warn",{"_index":625,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.optimizerenabled",{"_index":607,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.optimizerservice.disableressources(browsertab",{"_index":652,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.pageifpersisted(page.pageurl",{"_index":637,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.pagemodel(page",{"_index":326,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["this.pagemodel.find",{"_index":329,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["this.pagemodel.findbyidandremove(pagedatabaseid.id",{"_index":333,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["this.pagemodel.findbyidandupdate(id",{"_index":328,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["this.pagemodel.findone",{"_index":330,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["this.pagepersistanceservice.deletepagebyurl(url",{"_index":635,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.pagepersistanceservice.getallprerenderedpages",{"_index":634,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.pagepersistanceservice.getpagebyurlandproject(url",{"_index":620,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.pagepersistanceservice.updatepage",{"_index":641,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.pagepersistanceservice.writepage(page",{"_index":644,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.prerenderingengineservice",{"_index":418,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["this.prerenderingengineservice.deletepersistedpagebyurl(pagetodeleteurl.url).then",{"_index":429,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["this.prerenderingengineservice.getallprerenderedpages",{"_index":379,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["this.prerenderingengineservice.getprerenderedpagebyurl",{"_index":394,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["this.prerenderpage(url",{"_index":627,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.queryurlonly",{"_index":322,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["this.resolvewaitfor(elementtowaitfor",{"_index":624,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.ressourcestodisable",{"_index":226,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["this.ressourcestodisable.includes(req.resourcetype",{"_index":244,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["this.stirngisvalid(elementtowaitfor",{"_index":623,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["this.waitforstarters",{"_index":614,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["though",{"_index":796,"title":{},"body":{"index.html":{}}}],["throw",{"_index":277,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["throws",{"_index":375,"title":{},"body":{"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["thus",{"_index":88,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"index.html":{}}}],["time",{"_index":197,"title":{},"body":{"injectables/OptimizerService.html":{},"classes/PreRenderRequestDTO.html":{},"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["timeouts",{"_index":408,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["timestamp",{"_index":510,"title":{},"body":{"interfaces/PreRenderedPageModel.html":{}}}],["tiny",{"_index":896,"title":{},"body":{"index.html":{}}}],["todos",{"_index":869,"title":{},"body":{"index.html":{}}}],["trace",{"_index":167,"title":{},"body":{"injectables/LoggerService.html":{}}}],["tries",{"_index":396,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["true",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["try",{"_index":380,"title":{},"body":{"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["ts",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tsconfig.build.json",{"_index":866,"title":{},"body":{"index.html":{}}}],["type",{"_index":93,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoggerService.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{},"coverage.html":{},"index.html":{}}}],["typed",{"_index":86,"title":{},"body":{"injectables/ConfigService.html":{}}}],["types",{"_index":218,"title":{},"body":{"injectables/OptimizerService.html":{}}}],["types/dotenv",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":754,"title":{},"body":{"index.html":{}}}],["ui",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":676,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["under",{"_index":297,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["underlting",{"_index":413,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["underlying",{"_index":481,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["unresolvablelinks,elementtowaitfornotvalid",{"_index":409,"title":{},"body":{"controllers/PreRenderController.html":{}}}],["until",{"_index":464,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["update",{"_index":304,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"injectables/PreRenderingEngineService.html":{}}}],["updatepage",{"_index":266,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["updatepage(id",{"_index":301,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["updating",{"_index":640,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["uri",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["url",{"_index":275,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"controllers/PreRenderController.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{}}}],["use",{"_index":255,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"modules/PreRendererConfigModule.html":{},"index.html":{}}}],["used",{"_index":140,"title":{},"body":{"modules/LoggerModule.html":{},"injectables/OptimizerService.html":{},"injectables/PersistanceLayerService.html":{},"classes/PreRenderRequestDTO.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["usefindandmodify",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["usenewurlparser",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":476,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"index.html":{}}}],["user_agent_as_bot",{"_index":592,"title":{},"body":{"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["uses",{"_index":84,"title":{},"body":{"injectables/ConfigService.html":{}}}],["useunifiedtopology",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":539,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["using",{"_index":130,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/PreRenderController.html":{},"index.html":{}}}],["v4",{"_index":824,"title":{},"body":{"index.html":{}}}],["valid",{"_index":500,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"injectables/PreRenderingEngineService.html":{}}}],["validate",{"_index":586,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["validated",{"_index":87,"title":{},"body":{"injectables/ConfigService.html":{}}}],["validating",{"_index":852,"title":{},"body":{"index.html":{}}}],["value",{"_index":120,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/PreRenderingEngineService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":593,"title":{},"body":{"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["variable",{"_index":92,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/PersistanceLayerService.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"coverage.html":{},"index.html":{}}}],["variables",{"_index":79,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["varibale",{"_index":483,"title":{},"body":{"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{}}}],["varible",{"_index":520,"title":{},"body":{"modules/PreRendererConfigModule.html":{}}}],["version",{"_index":147,"title":{},"body":{"modules/LoggerModule.html":{},"index.html":{}}}],["vital",{"_index":910,"title":{},"body":{"index.html":{}}}],["void",{"_index":176,"title":{},"body":{"injectables/LoggerService.html":{}}}],["wait",{"_index":457,"title":{},"body":{"classes/PreRenderRequestDTO.html":{},"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["wait_for_starters",{"_index":602,"title":{},"body":{"injectables/PreRenderingEngineService.html":{},"index.html":{}}}],["waitfor",{"_index":578,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["waitforstarterindex",{"_index":665,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["waitforstarters",{"_index":547,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["want",{"_index":117,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/PreRenderedPageDataDTO.html":{},"interfaces/PreRenderedPageModel.html":{},"index.html":{}}}],["warn",{"_index":165,"title":{},"body":{"injectables/LoggerService.html":{}}}],["warn(message",{"_index":181,"title":{},"body":{"injectables/LoggerService.html":{}}}],["warning",{"_index":183,"title":{},"body":{"injectables/LoggerService.html":{},"index.html":{}}}],["way",{"_index":917,"title":{},"body":{"index.html":{}}}],["web",{"_index":397,"title":{},"body":{"controllers/PreRenderController.html":{},"injectables/PreRenderingEngineService.html":{}}}],["website",{"_index":784,"title":{},"body":{"index.html":{}}}],["websites",{"_index":772,"title":{},"body":{"index.html":{}}}],["weight",{"_index":751,"title":{},"body":{"index.html":{}}}],["well",{"_index":892,"title":{},"body":{"index.html":{}}}],["widgets",{"_index":904,"title":{},"body":{"index.html":{}}}],["wiill",{"_index":673,"title":{},"body":{"injectables/PreRenderingEngineService.html":{}}}],["wish",{"_index":286,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["wont",{"_index":456,"title":{},"body":{"classes/PreRenderRequestDTO.html":{}}}],["words",{"_index":738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["write",{"_index":311,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["writepage",{"_index":267,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["writepage(page",{"_index":309,"title":{},"body":{"injectables/PersistanceLayerService.html":{}}}],["yes",{"_index":288,"title":{},"body":{"injectables/PersistanceLayerService.html":{},"injectables/PreRenderingEngineService.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules/PreRenderModule.html":{},"modules/PreRendererConfigModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nLoggerModule\n\nLoggerModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nPreRenderModule\n\nPreRenderModule\n\nAppModule -->\n\nPreRenderModule->AppModule\n\n\n\n\n\nPreRendererConfigModule\n\nPreRendererConfigModule\n\nAppModule -->\n\nPreRendererConfigModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            PrerenderdAssetsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                        \n                            PreRenderModule\n                        \n                        \n                            PreRendererConfigModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrerenderdAssetsController } from './prerenderd-assets/prerenderd-assets.controller';\nimport { RessourceRequestsHandlerService } from './pre-renderer/pre-renderer-services/ressource-requests-handler/ressource-requests-handler.service';\nimport { PreRenderModule } from './pre-renderer/pre-render.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PreRendererConfigModule } from './config/pre-renderer-config.module';\nimport { ConfigService } from './config/config-service/config-service.service';\nimport { LoggerModule } from './logger/logger.module';\n\n@Module({\n  imports: [\n    PreRenderModule,\n    PreRendererConfigModule,\n    MongooseModule.forRootAsync({\n      imports: [PreRendererConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'),\n        useNewUrlParser: true,\n        useUnifiedTopology: true,\n        useFindAndModify: false,\n      }),\n      inject: [ConfigService],\n    }),\n    LoggerModule,\n  ],\n  controllers: [AppController, PrerenderdAssetsController],\n  providers: [AppService, RessourceRequestsHandlerService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config-service/config-service.service.ts\n        \n\n            \n                Description\n            \n            \n                \nThis stateful service will parse the config file and load all the configuration\nvariables we have specified.\nThere will be a single instance injectable in any service.\nIn case an other module uses it must import this module.\nThe extracted variables are neither typed nor validated, thus this process has to be implemented\nin case the required variable is not of type string.\n\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                envConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configFilePath: string, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/config/config-service/config-service.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configFilePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/config/config-service/config-service.service.ts:29\n                \n            \n\n\n            \n                \n                    Once this service is injected you \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe key of the variable you want to extract\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \nThe value of the provided key if existing.\n\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            envConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                        \n                            \n                                    Defined in src/config/config-service/config-service.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as dotenv from 'dotenv';\nimport * as fs from 'fs';\nimport { LoggerService } from 'src/logger/logger.services/logger.service';\n/**\n *  - This stateful service will parse the config file and load all the configuration\n * variables we have specified.\n *  - There will be a single instance injectable in any service.\n *  - In case an other module uses it must import this module.\n *  - The extracted variables are neither typed nor validated, thus this process has to be implemented\n * in case the required variable is not of type string.\n * @export\n * @class ConfigService\n */\n@Injectable()\nexport class ConfigService {\n  private readonly envConfig: Record;\n  constructor(configFilePath: string, private readonly logger: LoggerService) {\n    this.envConfig = dotenv.parse(fs.readFileSync(configFilePath));\n    this.logger.info(`Launching pre-renderer using ${configFilePath} config file.`);\n  }\n  /**\n   * Once this service is injected you \n   *\n   * @param {string} key -  The key of the variable you want to extract\n   * @returns {string} - The value of the provided key if existing.\n   * @memberof ConfigService\n   */\n  get(key: string): string {\n    return this.envConfig[key];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLoggerService \n\nLoggerService \n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/logger/logger.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nThis module is mainly used to create a single instance logging mechansim\nand could support reporting in later version if there will be any.\n\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Logger } from '@nestjs/common';\nimport { LoggerService } from './logger.services/logger.service';\n/**\n * - This module is mainly used to create a single instance logging mechansim\n * and could support reporting in later version if there will be any.\n *\n * @export\n * @class LoggerModule\n */\n@Module({\n  providers: [LoggerService],\n  exports: [LoggerService],\n})\nexport class LoggerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logger/logger.services/logger.service.ts\n        \n\n            \n                Description\n            \n            \n                \nNothing Itresting here LOL! just overriding the nest js logging class by\nadding code levels the spring boot style.\n\n\n            \n\n            \n                Extends\n            \n            \n                    Logger\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logger/logger.services/logger.service.ts:19\n                \n            \n\n\n            \n                \n                    \nLog an error an tell evil-people how they broke the app.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logger/logger.services/logger.service.ts:37\n                \n            \n\n\n            \n                \n                    \nProvide info to the log reader.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logger/logger.services/logger.service.ts:28\n                \n            \n\n\n            \n                \n                    \nLog a warning that needs some ones attention.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\n/**\n * - Nothing Itresting here LOL! just overriding the nest js logging class by\n * adding code levels the spring boot style.\n *\n * @export\n * @class LoggerService\n * @extends {Logger}\n */\n@Injectable()\nexport class LoggerService extends Logger {\n  /**\n   * - Log an error an tell evil-people how they broke the app.\n   *\n   * @param {string} message\n   * @param {string} trace\n   * @memberof LoggerService\n   */\n  error(message: string, trace: string) {\n    super.error(`[ERROR] ${message}`, trace);\n  }\n  /**\n   * - Log a warning that needs some ones attention.\n   *\n   * @param {string} message\n   * @memberof LoggerService\n   */\n  warn(message: string) {\n    super.warn(`[WARN] ${message}`);\n  }\n  /**\n   * - Provide info to the log reader.\n   *\n   * @param {string} message\n   * @memberof LoggerService\n   */\n  info(message: string) {\n    super.log(`[INFO] ${message}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OptimizerService.html":{"url":"injectables/OptimizerService.html","title":"injectable - OptimizerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OptimizerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pre-renderer/pre-renderer-services/optimizer/optimizer.service.ts\n        \n\n            \n                Description\n            \n            \n                \nThe optimizer service is used to reduce the page rendering time in the browser.\n\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ressourcesToDisable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                disableRessources\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/pre-renderer/pre-renderer-services/optimizer/optimizer.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            disableRessources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableRessources(browserTab)\n                \n            \n\n\n            \n                \n                    Defined in src/pre-renderer/pre-renderer-services/optimizer/optimizer.service.ts:34\n                \n            \n\n\n            \n                \n                    \nWhen called and given a browserTab instance this function will force the browser\nto abort the requests that are not necessary and that will slow down rendering time\nlike style sheets, images ...\nYou can choose what ressource types to disable thanks to the RESSOURCES_TO_DISABLE\nstring that could be found in the process environment .conf file.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    browserTab\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ressourcesToDisable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pre-renderer/pre-renderer-services/optimizer/optimizer.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from 'src/config/config-service/config-service.service';\nimport { LoggerService } from 'src/logger/logger.services/logger.service';\n/**\n *  - The optimizer service is used to reduce the page rendering time in the browser.\n *\n * @export\n * @class OptimizerService\n */\n@Injectable()\nexport class OptimizerService {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly logger: LoggerService,\n  ) {\n    this.ressourcesToDisable = this.configService\n      .get('RESSOURCES_TO_DISABLE')\n      .split(',');\n    logger.info(\n      `Parsed the following ressources to disable [${this.ressourcesToDisable}]`,\n    );\n  }\n  readonly ressourcesToDisable: string[];\n  /**\n   * - When called and given a browserTab instance this function will force the browser\n   * to abort the requests that are not necessary and that will slow down rendering time\n   * like style sheets, images ...\n   * - You can choose what ressource types to disable thanks to the ```RESSOURCES_TO_DISABLE```\n   * string that could be found in the process environment ```.conf``` file.\n   *\n   * @param {*} browserTab\n   * @memberof OptimizerService\n   */\n  async disableRessources(browserTab) {\n    // enable request interception in chrome tab\n    await browserTab.setRequestInterception(true);\n    // abort in case the requested ressource type will slow down the process.\n    browserTab.on('request', req => {\n      if (this.ressourcesToDisable.includes(req.resourceType())) {\n        this.logger.info(`aborting: ${req.url()}`);\n        req.abort();\n      } else if (req.resourceType()) {\n        req.continue();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersistanceLayerService.html":{"url":"injectables/PersistanceLayerService.html","title":"injectable - PersistanceLayerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PersistanceLayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pre-renderer/pre-renderer-services/persistance-layer/persistance-layer.service.ts\n        \n\n            \n                Description\n            \n            \n                \nThis service contains function that use mongoose preform CRUD\noperations on the data base.\n\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                queryUrlOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deletePageByUrl\n                            \n                            \n                                    Async\n                                getAllPreRenderedPages\n                            \n                            \n                                    Async\n                                getPageByUrlAndProject\n                            \n                            \n                                    Async\n                                updatePage\n                            \n                            \n                                    Async\n                                writePage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pageModel: Model, configService: ConfigService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/pre-renderer/pre-renderer-services/persistance-layer/persistance-layer.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pageModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePageByUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePageByUrl(url)\n                \n            \n\n\n            \n                \n                    Defined in src/pre-renderer/pre-renderer-services/persistance-layer/persistance-layer.service.ts:93\n                \n            \n\n\n            \n                \n                    \nThis function will delete a page thanks to the provided URL.\nIn case no page was found with the provied url this function will\nthrow an error.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllPreRenderedPages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPreRenderedPages()\n                \n            \n\n\n            \n                \n                    Defined in src/pre-renderer/pre-renderer-services/persistance-layer/persistance-layer.service.ts:63\n                \n            \n\n\n            \n                \n                    \nFetch all pre-rendered pages.\n\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPageByUrlAndProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPageByUrlAndProject(url: string, fieldsToRender?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/pre-renderer/pre-renderer-services/persistance-layer/persistance-layer.service.ts:75\n                \n            \n\n\n            \n                \n                    \nThis function will fetch pre-rendered pages from the data base.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe URL of the data base you wish to redner.\n\n\n                                    \n                                \n                                \n                                    fieldsToRender\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nOptional if provided this will use mongo projection to retreive specific\nattributes for performance and memory optimization. DO NOT UNDER ANY CIRCUMSTANCE PROVIDE THIS FEATURE TO EXPOSED CONTROLLERS\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updatePage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePage(id: string, page: PreRenderedPageModel)\n                \n            \n\n\n            \n                \n                    Defined in src/pre-renderer/pre-renderer-services/persistance-layer/persistance-layer.service.ts:51\n                \n            \n\n\n            \n                \n                    \nUpdate a page.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUsed to identify the existing instance in the data base.\n\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                PreRenderedPageModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe new data to persist.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            writePage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writePage(page: PreRenderedPageModel)\n                \n            \n\n\n            \n                \n                    Defined in src/pre-renderer/pre-renderer-services/persistance-layer/persistance-layer.service.ts:39\n                \n            \n\n\n            \n                \n                    \nWrite a page to the data base.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                PreRenderedPageModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            queryUrlOnly\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/pre-renderer/pre-renderer-services/persistance-layer/persistance-layer.service.ts:31\n                            \n                        \n\n                \n                    \n                        \nThis variable holds the ```QUERY_URL_ONLY```` variable in the .conf file\nand that is used to project only the pageUrl attribute from the database.\n\n@private\n@memberof PersistanceLayerService\n\n\n\n\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PreRenderedPageModel } from '../../models/preRenderedPageModel';\n\nimport { ConfigService } from 'src/config/config-service/config-service.service';\nimport { LoggerService } from 'src/logger/logger.services/logger.service';\n/**\n * - This service contains function that use mongoose preform CRUD\n * operations on the data base.\n * @export\n * @class PersistanceLayerService\n */\n@Injectable()\nexport class PersistanceLayerService {\n  constructor(\n    @InjectModel('PreRenderedPages')\n    private readonly pageModel: Model,\n    private readonly configService: ConfigService,\n    private readonly logger: LoggerService,\n  ) {\n    this.queryUrlOnly = JSON.parse(configService.get('QUERY_URL_ONLY'));\n  }\n  /**\n   * - This variable holds the ```QUERY_URL_ONLY```` variable in the .conf file\n   * and that is used to project only the pageUrl attribute from the database.\n   *\n   * @private\n   * @memberof PersistanceLayerService\n   */\n  private readonly queryUrlOnly;\n  /**\n   * - Write a page to the data base.\n   *\n   * @param {PreRenderedPageModel} page\n   * @returns {Promise}\n   * @memberof PersistanceLayerService\n   */\n  async writePage(page: PreRenderedPageModel): Promise {\n    const newPage = new this.pageModel(page);\n    return await newPage.save();\n  }\n  /**\n   * - Update a page.\n   *\n   * @param {string} id - Used to identify the existing instance in the data base.\n   * @param {PreRenderedPageModel} page - The new data to persist.\n   * @returns {Promise}\n   * @memberof PersistanceLayerService\n   */\n  async updatePage(\n    id: string,\n    page: PreRenderedPageModel,\n  ): Promise {\n    return await this.pageModel.findByIdAndUpdate(id, page);\n  }\n  /**\n   * - Fetch all pre-rendered pages.\n   *\n   * @returns {Promise}\n   * @memberof PersistanceLayerService\n   */\n  async getAllPreRenderedPages(): Promise {\n    return await this.pageModel.find();\n  }\n  /**\n   * - This function will fetch pre-rendered pages from the data base.\n   *\n   * @param {string} url - The URL of the data base you wish to redner.\n   * @param {*} [fieldsToRender] - Optional if provided this will use mongo projection to retreive specific\n   * attributes for performance and memory optimization. ***DO NOT UNDER ANY CIRCUMSTANCE PROVIDE THIS FEATURE TO EXPOSED CONTROLLERS***\n   * @returns {Promise}\n   * @memberof PersistanceLayerService\n   */\n  async getPageByUrlAndProject(\n    url: string,\n    fieldsToRender?: any,\n  ): Promise {\n    if (fieldsToRender) {\n      return await this.pageModel.findOne({ pageUrl: url }, fieldsToRender);\n    }\n    return await this.pageModel.findOne({ pageUrl: url }, this.queryUrlOnly);\n  }\n  /**\n   * - This function will delete a page thanks to the provided URL.\n   * - In case no page was found with the provied url this function will\n   * throw an error.\n   *\n   * @param {*} url\n   * @returns\n   * @memberof PersistanceLayerService\n   */\n  async deletePageByUrl(url) {\n    const pageDataBaseId: PreRenderedPageModel = await this.pageModel.findOne(\n      { pageUrl: url },\n      this.queryUrlOnly,\n    );\n    if (pageDataBaseId && pageDataBaseId.id) {\n      return await this.pageModel.findByIdAndRemove(pageDataBaseId.id);\n    }\n    throw new Error(`The page with url:  does not exists`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PreRenderController.html":{"url":"controllers/PreRenderController.html","title":"controller - PreRenderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PreRenderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pre-renderer/pre-render.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                pre-render\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletePreRenderedPageByUrl\n                            \n                            \n                                    Async\n                                getPrenderedPagesByInput\n                            \n                            \n                                    Async\n                                getPrenderedPagesByUrl\n                            \n                            \n                                preRenderWebPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePreRenderedPageByUrl\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePreRenderedPageByUrl(pageToDeleteUrl)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete-pre-rendered-page-by-url')\n                \n            \n\n            \n                \n                    Defined in src/pre-renderer/pre-render.controller.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageToDeleteUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPrenderedPagesByInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPrenderedPagesByInput()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('get-all-pages')\n                \n            \n\n            \n                \n                    Defined in src/pre-renderer/pre-render.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPrenderedPagesByUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPrenderedPagesByUrl(getPageUrl)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('get-page-by-url')\n                \n            \n\n            \n                \n                    Defined in src/pre-renderer/pre-render.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getPageUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            preRenderWebPage\n                        \n                        \n                    \n                \n            \n            \n                \npreRenderWebPage(preRenderPageDTO: PreRenderRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('pre-render-page')\n                \n            \n\n            \n                \n                    Defined in src/pre-renderer/pre-render.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    preRenderPageDTO\n                                    \n                                                PreRenderRequestDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Body,\n  Post,\n  HttpException,\n  HttpStatus,\n  Get,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { PreRenderRequestDTO } from './pre-renderer-controller-DTOs/preRenderRequestDTO';\nimport { PreRenderingEngineService } from './pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service';\nimport { PreRenderedPageModel } from './models/preRenderedPageModel';\nimport { PreRenderedPageDataDTO } from './pre-renderer-controller-DTOs/preRenderedPageDataDTO';\n@Controller('pre-render')\nexport class PreRenderController {\n  constructor(\n    private readonly preRenderingEngineService: PreRenderingEngineService,\n  ) { }\n  /**\n   * @Get ````get-all-pages```\n   * - Gets All the pre-rendered pages form the database.\n   * - Throws and 404 exceptionn in case nothing is found.\n   *\n   * @returns {Promise}\n   * @memberof PreRenderController\n   */\n  @Get('get-all-pages')\n  async getPrenderedPagesByInput(): Promise {\n    const preRenderedPages = await this.preRenderingEngineService.getAllPreRenderedPages();\n    try {\n      return preRenderedPages.map(preRenderedPage => {\n        return {\n          pageUrl: preRenderedPage.pageUrl,\n          content: preRenderedPage.content,\n          lastPreRenderingDate: new Date(preRenderedPage.lastPreRenderingDate)\n        };\n      });\n    } catch (error) {\n      throw new HttpException(`No page to be found, this error occured while fetching content ${error}`, HttpStatus.NOT_FOUND);\n    }\n  }\n  /**\n   * @Post ````get-page-by-url```\n   * - Gets a pre-rendered page by the provided url form the database.\n   * - Throws and 404 exceptionn in case nothing is found.\n   * - Body example { \"url\" : \"http://www.egyBest.com\"}\n   *\n   * @param {*} getPageUrl\n   * @returns {Promise}\n   * @memberof PreRenderController\n   */\n  @Post('get-page-by-url')\n  async getPrenderedPagesByUrl(\n    @Body() getPageUrl,\n  ): Promise {\n    const preRenderedPage = await this.preRenderingEngineService.getPreRenderedPageByUrl(\n      getPageUrl.url,\n    );\n    try {\n      return {\n        pageUrl: preRenderedPage.pageUrl,\n        content: preRenderedPage.content,\n        lastPreRenderingDate: new Date(preRenderedPage.lastPreRenderingDate)\n      };\n    } catch (error) {\n      throw new HttpException(`No page to be found, this error occured while fetching content ${error}`, HttpStatus.NOT_FOUND);\n    }\n  }\n  /**\n   * @Post ````pre-render-page```\n   * - Tries to pre-render a web page by it's URL (add to database or save if exists).\n   * - Body example {\"pageUrl\": \"http://uat-seeyond.minotore.com/fr/en/pro/products/3307\",\"elementToWaitFor\": \"#overview\"}\n   * - Many issues could happen when using this endpoint like TimeOuts, UnresolvableLinks,elementToWaitForNotValid... thus\n   * it simply throws a 500 Exception and the provied the underlting error.\n   * - If the elementToWaitFor is not provided it the browser will render the first content it receives.\n   * @param {PreRenderRequestDTO} preRenderPageDTO\n   * @returns\n   * @memberof PreRenderController\n   */\n  @Post('pre-render-page')\n  preRenderWebPage(@Body() preRenderPageDTO: PreRenderRequestDTO) {\n    return this.preRenderingEngineService\n      .preRenderAndPersistPage(preRenderPageDTO.pageUrl, preRenderPageDTO.elementToWaitFor)\n      .then(resolved => {\n        return resolved;\n      })\n      .catch(error => {\n        throw new HttpException(\n          `This error occured while pre-rendering page ${error}.`,\n          HttpStatus.INTERNAL_SERVER_ERROR,\n        );\n      });\n  }\n  /**\n   * @Delete ````delete-pre-rendered-page-by-url```\n   * - Deletes a pre-rendered web page by it's URL.\n   * - Body example {\"url\": \"http://uat-seeyond.minotore.com/fr/en/pro/products/3307\"}\n   * - Throws and 400 exceptionn in case page is not found.\n   * \n   * @param {PreRenderRequestDTO} preRenderPageDTO\n   * @returns\n   * @memberof PreRenderController\n   *\n   * @param {*} pageToDeleteUrl\n   * @returns\n   * @memberof PreRenderController\n   */\n  @Delete('delete-pre-rendered-page-by-url')\n  deletePreRenderedPageByUrl(@Body() pageToDeleteUrl) {\n    return this.preRenderingEngineService.deletePersistedPageByUrl(pageToDeleteUrl.url).then(\n      resolved => {\n        return resolved;\n      }\n    ).catch(error => {\n      return new HttpException(\n        error.message,\n        HttpStatus.BAD_REQUEST,\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PreRenderModule.html":{"url":"modules/PreRenderModule.html","title":"module - PreRenderModule","body":"\n                   \n\n\n\n\n    Modules\n    PreRenderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PreRenderModule\n\n\n\ncluster_PreRenderModule_imports\n\n\n\ncluster_PreRenderModule_providers\n\n\n\n\nLoggerModule\n\nLoggerModule\n\n\n\nPreRenderModule\n\nPreRenderModule\n\nPreRenderModule -->\n\nLoggerModule->PreRenderModule\n\n\n\n\n\nPreRendererConfigModule\n\nPreRendererConfigModule\n\nPreRenderModule -->\n\nPreRendererConfigModule->PreRenderModule\n\n\n\n\n\nOptimizerService\n\nOptimizerService\n\nPreRenderModule -->\n\nOptimizerService->PreRenderModule\n\n\n\n\n\nPersistanceLayerService\n\nPersistanceLayerService\n\nPreRenderModule -->\n\nPersistanceLayerService->PreRenderModule\n\n\n\n\n\nPreRenderingEngineService\n\nPreRenderingEngineService\n\nPreRenderModule -->\n\nPreRenderingEngineService->PreRenderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pre-renderer/pre-render.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nManage the pre-rendering service and their external dependencies.\n\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OptimizerService\n                        \n                        \n                            PersistanceLayerService\n                        \n                        \n                            PreRenderingEngineService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PreRenderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                        \n                            PreRendererConfigModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PreRenderController } from './pre-render.controller';\nimport { RessourceRequestsHandlerService } from './pre-renderer-services/ressource-requests-handler/ressource-requests-handler.service';\nimport { PreRenderingEngineService } from './pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service';\nimport { PageSchema } from './schemas/page.schema';\nimport { PersistanceLayerService } from './pre-renderer-services/persistance-layer/persistance-layer.service';\nimport { OptimizerService } from './pre-renderer-services/optimizer/optimizer.service';\nimport { PreRendererConfigModule } from 'src/config/pre-renderer-config.module';\nimport { LoggerModule } from 'src/logger/logger.module';\n/**\n * - Manage the pre-rendering service and their external dependencies.\n *\n * @export\n * @class PreRenderModule\n */\n@Module({\n  imports: [MongooseModule.forFeature([{ name: 'PreRenderedPages', schema: PageSchema }]), PreRendererConfigModule, LoggerModule],\n  controllers: [\n    PreRenderController],\n  providers: [RessourceRequestsHandlerService, PreRenderingEngineService, PersistanceLayerService, OptimizerService],\n})\nexport class PreRenderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PreRenderRequestDTO.html":{"url":"classes/PreRenderRequestDTO.html","title":"class - PreRenderRequestDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PreRenderRequestDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pre-renderer/pre-renderer-controller-DTOs/preRenderRequestDTO.ts\n        \n\n            \n                Description\n            \n            \n                This class is the input of the pre-render controller endpoint used to pre-render a page.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                elementToWaitFor\n                            \n                            \n                                    Readonly\n                                pageUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            elementToWaitFor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pre-renderer/pre-renderer-controller-DTOs/preRenderRequestDTO.ts:29\n                            \n                        \n\n                \n                    \n                        \nWhen the browser pre-renders the page it will stop at the first moment all\nresource are fetched and wont wait fo the javascript that will alter the DOM\nand add dynamically more content to it.\nIf provided this will force the browser to wait until a specific element appears\nin the DOM.\nThe browser is able to identify the element to wait for thanks to its class or it's\nid thus these elements must have a prefix of # or . .\nIn case the element class or tag are not found the browser will raise a time-out-exception\nafter 30000 secs.\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            pageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pre-renderer/pre-renderer-controller-DTOs/preRenderRequestDTO.ts:14\n                            \n                        \n\n                \n                    \n                        \nThe url of the page to pre-render.\n\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PreRenderRequestDTO {\n    /**\n     * - The url of the page to pre-render.\n     *\n     * @type {string}\n     * @memberof PreRenderRequestDTO\n     */\n    readonly pageUrl: string;\n    /**\n     *  - When the browser pre-renders the page it will stop at the first moment all\n     * resource are fetched and wont wait fo the javascript that will alter the DOM\n     * and add dynamically more content to it.\n     *  - If provided this will force the browser to wait until a specific element appears\n     * in the DOM.\n     *  - The browser is able to identify the element to wait for thanks to its class or it's\n     * id thus these elements must have a prefix of ```#``` or ```.``` .\n     *  - In case the element class or tag are not found the browser will raise a time-out-exception\n     * after 30000 secs.\n     *\n     * @type {string}\n     * @memberof PreRenderRequestDTO\n     */\n    readonly elementToWaitFor: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PreRenderedPageDataDTO.html":{"url":"interfaces/PreRenderedPageDataDTO.html","title":"interface - PreRenderedPageDataDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PreRenderedPageDataDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pre-renderer/pre-renderer-controller-DTOs/preRenderedPageDataDTO.ts\n        \n\n            \n                Description\n            \n            \n                \nThis class is a user friendly representation of the renerder page data.\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        lastPreRenderingDate\n                                \n                                \n                                        pageUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    \nAfter the page is page is fetched and then pre-renderd the underlying content will be contained in this varibale.\nIt's alot faster to manage data stored in a data base than to process files, this is why this large variable\nis stored in the data base so beware of it's size.\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastPreRenderingDate\n                                    \n                                \n                                \n                                    \n                                        lastPreRenderingDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    \nA date format at which the page was pre-redered.\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageUrl\n                                    \n                                \n                                \n                                    \n                                        pageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    \nThis is the buisness id which is the full URL of the page we want to pre-render\nit will be used later by the prerendering engine to get the page data thus make sure\nit's valid otherwise the API will raise an Exception.\n\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface PreRenderedPageDataDTO {\n    /**\n     * - This is the buisness id which is the full URL of the page we want to pre-render\n     * it will be used later by the prerendering engine to get the page data thus make sure\n     * it's valid otherwise the API will raise an Exception.\n     *\n     * @type {string}\n     * @memberof PreRenderedPageDataDTO\n     */\n    pageUrl: string;\n    /**\n     * - After the page is page is fetched and then pre-renderd the underlying content will be contained in this varibale.\n     * - It's alot faster to manage data stored in a data base than to process files, this is why this **large** variable\n     * is stored in the data base so beware of it's size.\n     *\n     * @type {string}\n     * @memberof PreRenderedPageDataDTO\n     */\n    content: string;\n    /**\n     * - A date format at which the page was pre-redered.\n     *\n     * @type {string}\n     * @memberof PreRenderedPageDataDTO\n     */\n    lastPreRenderingDate: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PreRenderedPageModel.html":{"url":"interfaces/PreRenderedPageModel.html","title":"interface - PreRenderedPageModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PreRenderedPageModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pre-renderer/models/preRenderedPageModel.ts\n        \n\n            \n                Description\n            \n            \n                \nThis class represents the data structure of a prerendered page in the data base.\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        lastPreRenderingDate\n                                \n                                \n                                        pageUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    \nAfter the page is page is fetched and then pre-renderd the underlying content will be contained in this varibale.\nIt's alot faster to manage data stored in a data base than to process files, this is why this large variable\nis stored in the data base so beware of it's size.\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    \nThis field is marked as optional because it's specific to the data base.\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastPreRenderingDate\n                                    \n                                \n                                \n                                    \n                                        lastPreRenderingDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    \nA timestamp that declares the date at which the page was pre-redered.\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageUrl\n                                    \n                                \n                                \n                                    \n                                        pageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    \nThis is the buisness id which is the full URL of the page we want to pre-render\nit will be used later by the prerendering engine to get the page data thus make sure\nit's valid otherwise the API will raise an Exception.\n\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface PreRenderedPageModel {\n    /**\n     * - This field is marked as optional because it's specific to the data base.\n     *\n     * @type {string}\n     * @memberof PreRenderedPageModel\n     */\n    id?: string;\n    /**\n     * - This is the buisness id which is the full URL of the page we want to pre-render\n     * it will be used later by the prerendering engine to get the page data thus make sure\n     * it's valid otherwise the API will raise an Exception.\n     *\n     * @type {string}\n     * @memberof PreRenderedPageModel\n     */\n    pageUrl: string;\n    /**\n     * - After the page is page is fetched and then pre-renderd the underlying content will be contained in this varibale.\n     * - It's alot faster to manage data stored in a data base than to process files, this is why this **large** variable\n     * is stored in the data base so beware of it's size.\n     *\n     * @type {string}\n     * @memberof PreRenderedPageModel\n     */\n    content: string;\n    /**\n     * - A timestamp that declares the date at which the page was pre-redered.\n     *\n     * @type {string}\n     * @memberof PreRenderedPageModel\n     */\n    lastPreRenderingDate: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PreRendererConfigModule.html":{"url":"modules/PreRendererConfigModule.html","title":"module - PreRendererConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    PreRendererConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PreRendererConfigModule\n\n\n\ncluster_PreRendererConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nPreRendererConfigModule\n\nPreRendererConfigModule\n\nConfigService  -->\n\nPreRendererConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/pre-renderer-config.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nThis module has to be imported in every module that it's children use it.\nIn order to set the process.env.NODE_ENV varible just run the app with the\nfollowing command NODE_ENV={environment name} node main.js and it will fetch for\nthe file named {environment name}.conf, if not provided the system will use the default file name to\nrender which is development.conf.\nIn case the specified file is not to be found in the root directory of the /src \n(in dev environment) or /dist (in production environment).\nthe app will fail to boostrap.\n\n\n        \n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Module } from '@nestjs/common';\nimport { ConfigService } from './config-service/config-service.service';\nimport { LoggerService } from 'src/logger/logger.services/logger.service';\n/**\n *  - This module has to be imported in every module that it's children use it.\n *  - In order to set the ```process.env.NODE_ENV varible``` just run the app with the\n * following command ```NODE_ENV={environment name}``` node main.js and it will fetch for\n * the file named ```{environment name}.conf```, if not provided the system will use the default file name to\n * render which is ```development.conf```.\n *  - In case the specified file is not to be found in the root directory of the ```/src``` \n * (in dev environment) or ```/dist``` (in production environment).\n * the app will fail to boostrap.\n * @export\n * @class PreRendererConfigModule\n */\n@Module({\n  providers: [\n    {\n      provide: ConfigService,\n      useValue: new ConfigService(`${process.env.NODE_ENV || 'development'}.conf`, new LoggerService()),\n    },\n  ],\n  exports: [ConfigService],\n})\nexport class PreRendererConfigModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PreRenderingEngineService.html":{"url":"injectables/PreRenderingEngineService.html","title":"injectable - PreRenderingEngineService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PreRenderingEngineService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                botUserAgent\n                            \n                            \n                                    Readonly\n                                identifyAsBot\n                            \n                            \n                                    Readonly\n                                launchHeadlessBrowser\n                            \n                            \n                                    Readonly\n                                optimizerEnabled\n                            \n                            \n                                    Readonly\n                                waitForStarters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deletePersistedPageByUrl\n                            \n                            \n                                    Async\n                                getAllPreRenderedPages\n                            \n                            \n                                    Async\n                                getPreRenderedPageByUrl\n                            \n                            \n                                    Private\n                                    Async\n                                handlePagePersistance\n                            \n                            \n                                    Private\n                                    Async\n                                pageIfPersisted\n                            \n                            \n                                    Async\n                                preRenderAndPersistPage\n                            \n                            \n                                    Private\n                                    Async\n                                preRenderPage\n                            \n                            \n                                    Private\n                                resolveWaitFor\n                            \n                            \n                                    Private\n                                stirngIsValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pagePersistanceService: PersistanceLayerService, configService: ConfigService, logger: LoggerService, optimizerService: OptimizerService)\n                    \n                \n                        \n                            \n                                Defined in src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pagePersistanceService\n                                                  \n                                                        \n                                                                        PersistanceLayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        optimizerService\n                                                  \n                                                        \n                                                                        OptimizerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePersistedPageByUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePersistedPageByUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts:128\n                \n            \n\n\n            \n                \n                    \nDelete a page by it's Url.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllPreRenderedPages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPreRenderedPages()\n                \n            \n\n\n            \n                \n                    Defined in src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts:118\n                \n            \n\n\n            \n                \n                    \nRetreives all pre-rendered pages.\n\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPreRenderedPageByUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPreRenderedPageByUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts:71\n                \n            \n\n\n            \n                \n                    \nGet a page by Url\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            handlePagePersistance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handlePagePersistance(page: PreRenderedPageModel)\n                \n            \n\n\n            \n                \n                    Defined in src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts:139\n                \n            \n\n\n            \n                \n                    \nThis function will decide to either update or create pre-renderd page.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                PreRenderedPageModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            pageIfPersisted\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pageIfPersisted(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts:161\n                \n            \n\n\n            \n                \n                    \nreturns a page if it exists with minimimal data.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            preRenderAndPersistPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    preRenderAndPersistPage(url: string, elementToWaitFor?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts:83\n                \n            \n\n\n            \n                \n                    \nPre-render a web page by its url than persist it in the database.\nRejects errors of it's sub functions.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    elementToWaitFor\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            preRenderPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    preRenderPage(url, waitFor: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts:174\n                \n            \n\n\n            \n                \n                    \nResponsible for pre-renderinga page.\nLogs the time taken for a page to pre-render.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    waitFor\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resolveWaitFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveWaitFor(waitFor: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts:215\n                \n            \n\n\n            \n                \n                    \nWill validate and resolve if provied the element to wait for.\nThrows error if not valid.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    waitFor\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            stirngIsValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stirngIsValid(stringValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts:242\n                \n            \n\n\n            \n                \n                    \nReturns a string if it is valid\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stringValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            botUserAgent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts:56\n                            \n                        \n\n                \n                    \n                        \nvalue extracted from the USER_AGENT_AS_BOT .conf file var.\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            identifyAsBot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts:42\n                            \n                        \n\n                \n                    \n                        \nvalue extracted from the IDENTIFY_AS_BOT .conf file var.\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            launchHeadlessBrowser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts:49\n                            \n                        \n\n                \n                    \n                        \nvalue extracted from the LAUNCH_HEADLESS_BROWSER .conf file var.\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            optimizerEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts:35\n                            \n                        \n\n                \n                    \n                        \nvalue extracted from the ENABLE_OPTIMIZATION .conf file var.\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            waitForStarters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts:63\n                            \n                        \n\n                \n                    \n                        \nvalue extracted from the WAIT_FOR_STARTERS .conf file var.\n\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as puppetter from 'puppeteer';\nimport { PreRenderedPageModel } from '../../models/preRenderedPageModel';\nimport { PersistanceLayerService } from '../persistance-layer/persistance-layer.service';\n\nimport { OptimizerService } from '../optimizer/optimizer.service';\nimport { ConfigService } from 'src/config/config-service/config-service.service';\nimport { LoggerService } from 'src/logger/logger.services/logger.service';\n\n@Injectable()\nexport class PreRenderingEngineService {\n  constructor(\n    private readonly pagePersistanceService: PersistanceLayerService,\n    private readonly configService: ConfigService,\n    private readonly logger: LoggerService,\n    private readonly optimizerService: OptimizerService,\n  ) {\n    this.optimizerEnabled = JSON.parse(\n      configService.get('ENABLE_OPTIMIZATION'),\n    );\n    this.identifyAsBot = JSON.parse(configService.get('IDENTIFY_AS_BOT'));\n    this.launchHeadlessBrowser = JSON.parse(\n      configService.get('LAUNCH_HEADLESS_BROWSER'),\n    );\n    this.waitForStarters = configService.get('WAIT_FOR_STARTERS').split(',');\n    this.botUserAgent = configService.get('USER_AGENT_AS_BOT');\n    logger.info(`Rendering optimizer enabled ${this.optimizerEnabled}`);\n  }\n  /**\n   * - value extracted from the ENABLE_OPTIMIZATION .conf file var.\n   *\n   * @type {boolean}\n   * @memberof PreRenderingEngineService\n   */\n  readonly optimizerEnabled: boolean;\n  /**\n   * - value extracted from the IDENTIFY_AS_BOT .conf file var.\n   *\n   * @type {boolean}\n   * @memberof PreRenderingEngineService\n   */\n  readonly identifyAsBot: boolean;\n  /**\n   * - value extracted from the LAUNCH_HEADLESS_BROWSER .conf file var.\n   *\n   * @type {boolean}\n   * @memberof PreRenderingEngineService\n   */\n  readonly launchHeadlessBrowser: boolean;\n  /**\n   * - value extracted from the USER_AGENT_AS_BOT .conf file var.\n   *\n   * @type {string}\n   * @memberof PreRenderingEngineService\n   */\n  readonly botUserAgent: string;\n  /**\n   * - value extracted from the WAIT_FOR_STARTERS .conf file var.\n   *\n   * @type {string[]}\n   * @memberof PreRenderingEngineService\n   */\n  readonly waitForStarters: string[];\n  /**\n   * - Get a page by Url\n   *\n   * @param {string} url\n   * @returns {Promise}\n   * @memberof PreRenderingEngineService\n   */\n  async getPreRenderedPageByUrl(url: string): Promise {\n    return await this.pagePersistanceService.getPageByUrlAndProject(url);\n  }\n  /**\n   * - Pre-render a web page by its url than persist it in the database.\n   * - Rejects errors of it's sub functions.\n   *\n   * @param {string} url\n   * @param {string} [elementToWaitFor]\n   * @returns {Promise}\n   * @memberof PreRenderingEngineService\n   */\n  async preRenderAndPersistPage(\n    url: string,\n    elementToWaitFor?: string,\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        let waitFor;\n        if (this.stirngIsValid(elementToWaitFor)) {\n          waitFor = this.resolveWaitFor(elementToWaitFor);\n        } else {\n          this.logger.warn(\n            `The element to wait for or it's time are not defined.`,\n          );\n        }\n        const tabContent = await this.preRenderPage(url, waitFor);\n        const preRenderedPageData: PreRenderedPageModel = {\n          content: tabContent,\n          lastPreRenderingDate: new Date().getTime(),\n          pageUrl: url,\n        };\n        const persistedPreRenderedPageData = await this.handlePagePersistance(\n          preRenderedPageData,\n        );\n        resolve(persistedPreRenderedPageData);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n  /**\n   * - Retreives all pre-rendered pages.\n   *\n   * @returns {Promise}\n   * @memberof PreRenderingEngineService\n   */\n  async getAllPreRenderedPages(): Promise {\n    return await this.pagePersistanceService.getAllPreRenderedPages();\n  }\n  /**\n   * - Delete a page by it's Url.\n   *\n   * @param {string} url\n   * @returns {Promise}\n   * @memberof PreRenderingEngineService\n   */\n  async deletePersistedPageByUrl(url: string): Promise {\n    return await this.pagePersistanceService.deletePageByUrl(url);\n  }\n  /**\n   * - This function will decide to either update or create pre-renderd page.\n   *\n   * @private\n   * @param {PreRenderedPageModel} page\n   * @returns {Promise}\n   * @memberof PreRenderingEngineService\n   */\n  private async handlePagePersistance(\n    page: PreRenderedPageModel,\n  ): Promise {\n    const persistedPage = await this.pageIfPersisted(page.pageUrl);\n    if (persistedPage) {\n      this.logger.info('Found previous, updating ...');\n      return await this.pagePersistanceService.updatePage(\n        persistedPage.id,\n        page,\n      );\n    }\n    this.logger.info('No previous page found, adding new ...');\n    return await this.pagePersistanceService.writePage(page);\n  }\n  /**\n   * - returns a page if it exists with minimimal data.\n   *\n   * @private\n   * @param {string} url\n   * @returns {Promise}\n   * @memberof PreRenderingEngineService\n   */\n  private async pageIfPersisted(url: string): Promise {\n    return await this.pagePersistanceService.getPageByUrlAndProject(url);\n  }\n  /**\n   * - Responsible for pre-renderinga page.\n   * - Logs the time taken for a page to pre-render.\n   *\n   * @private\n   * @param {*} url\n   * @param {string} waitFor\n   * @returns {Promise}\n   * @memberof PreRenderingEngineService\n   */\n  private async preRenderPage(url, waitFor: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      const browser = await puppetter.launch({\n        headless: this.launchHeadlessBrowser,\n      });\n      // launch a new tab in the browser.\n      const browserTab = await browser.newPage();\n      const hrStart = process.hrtime();\n      try {\n        if (this.identifyAsBot) {\n          browserTab.setUserAgent(this.botUserAgent);\n        }\n        if (this.optimizerEnabled) {\n          this.optimizerService.disableRessources(browserTab);\n        }\n        await browserTab.goto(url);\n        if (waitFor) {\n          await browserTab.waitFor(waitFor);\n        }\n        const tabContent = await browserTab.content();\n        await browserTab.close();\n        await browser.close();\n        this.logger.info(`Took ${process.hrtime(hrStart)} to render ${url}`);\n        resolve(tabContent);\n      } catch (err) {\n        this.logger.error(err, err.trace);\n        await browserTab.close();\n        await browser.close();\n        reject(err);\n      }\n    });\n  }\n  /**\n   * - Will validate and resolve if provied the element to wait for.\n   * - Throws error if not valid.\n   *\n   * @private\n   * @param {string} waitFor\n   * @returns {string}\n   * @memberof PreRenderingEngineService\n   */\n  private resolveWaitFor(waitFor: string): string {\n    for (\n      let waitForStarterIndex = 0;\n      waitForStarterIndex  1\n      ) {\n        return waitFor;\n      }\n    }\n    throw new Error(\n      `Could not resolve element to wait for, type of the element to wait for  it has\n       to start with one of [${this.waitForStarters}] and must have a length > 1. in case such element\n       does not exist there wiill be a  time out exception.`,\n    );\n  }\n  /**\n   * - Returns a string if it is valid\n   *\n   * @private\n   * @param {string} stringValue\n   * @returns {string}\n   * @memberof PreRenderingEngineService\n   */\n  private stirngIsValid(stringValue: string): string {\n    if (stringValue && stringValue.length !== 0) {\n      return stringValue.toString();\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PrerenderdAssetsController.html":{"url":"controllers/PrerenderdAssetsController.html","title":"controller - PrerenderdAssetsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PrerenderdAssetsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prerenderd-assets/prerenderd-assets.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                prerenderd-assets\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('prerenderd-assets')\nexport class PrerenderdAssetsController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/config-service/config-service.service.ts\n            \n            injectable\n            ConfigService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/config/swagger-config.ts\n            \n            function\n            swaggerConfigurer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/logger/logger.services/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pre-renderer/models/preRenderedPageModel.ts\n            \n            interface\n            PreRenderedPageModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/pre-renderer/pre-render.controller.ts\n            \n            controller\n            PreRenderController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/pre-renderer/pre-renderer-controller-DTOs/preRenderRequestDTO.ts\n            \n            class\n            PreRenderRequestDTO\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/pre-renderer/pre-renderer-controller-DTOs/preRenderedPageDataDTO.ts\n            \n            interface\n            PreRenderedPageDataDTO\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/pre-renderer/pre-renderer-services/optimizer/optimizer.service.ts\n            \n            injectable\n            OptimizerService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/pre-renderer/pre-renderer-services/persistance-layer/persistance-layer.service.ts\n            \n            injectable\n            PersistanceLayerService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/pre-renderer/pre-renderer-services/pre-rendering-engine/pre-rendering-engine.service.ts\n            \n            injectable\n            PreRenderingEngineService\n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                src/pre-renderer/schemas/page.schema.ts\n            \n            variable\n            PageSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/prerenderd-assets/prerenderd-assets.controller.ts\n            \n            controller\n            PrerenderdAssetsController\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/mongoose : ^6.1.2\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/swagger : ^3.1.0\n        \n            @types/dotenv : ^8.2.0\n        \n            compression : ^1.7.4\n        \n            dotenv : ^8.2.0\n        \n            mongoose : ^5.7.12\n        \n            puppeteer : ^2.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            swagger-ui-express : ^4.1.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            swaggerConfigurer   (src/.../swagger-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/config/swagger-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            swaggerConfigurer\n                        \n                        \n                    \n                \n            \n            \n                \nswaggerConfigurer(app)\n                \n            \n\n\n\n\n            \n                \n                    \nSince this Restful API comes with swagger implementation (or at least supposed to be ;p)\nthis default function is used to configure it and add some words to it.\nTo consult the swagger documentation check out the /api endpoint.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nComodoFalcon\nA beta version of a pre-rendering engine used to solve SEO issues that comes with Client Side Rendering.\nComodoFalcon is a cloud-enabled, light weight, restful microservice, build with:\n\nnest js: TypeScript Angular-framework (MIT licensed) :heart_eyes: .\npuppeteer: a high end browser programatic handler (Apache licensed).\ncompodoc used to generate increadible documentation form code comments\nmongodb.\n\n\nOverview\n\n\nProblematic:For our platform websites to be indexed by google bots we must apply to the constantly changing SEO rules, one of which is rendering time, in fact google crawlers will see how much time your website takes to render content. \nThe issue in hand is that the new Minotore approach is using both rendering processes (SSR, CSR) by using spring MVC for SSR, and angular elements for CSR. The ratio though is what matters, and the website is 60% to 70% in favor of CSR. Which is a big SEO issue because more than half of the website want be refrenced. \nThis is simply because crawlers do not execute JavaScript, even though google claims that sometimes they do for high ranked websites. \n\nSolution: \nSo, the solution here is simple, when a bot fetches content form us we should provide him with the maximum content possible, and thus we need to do what browsers are made to do.\n :collision: We are building ComodoFalcon the pre-rendering engine :collision:\n\n\n\nSSR: Server-Side Rendering. \nCSR: Client-Side Rendering.\n\n\nInstallation\n\nComodoFalcon requires:\n\nNode.js v4+ to run.\nmongo db instance.\n\nInstall the dependencies and devDependencies.\n$ npm installBuild project\n$ npm run buildStart the server in dev mode\n:warning: You must provide an development.conf that contains run time configurations in the root folder\n$ NODE_ENV=development npm run start:devStart the server production mode\n:warning: You must provide an production.conf that contains run time configurations in the root folder\n$ NODE_ENV=production npm run start:prod.CONF file\n:warning: All of these fields are required.\n| Variable name | Description |\n| ------ | ------ |\n| SERVER_PORT | Port on which the app is served |\n| MONGODB_URI | The data base URI |\n| LAUNCH_HEADLESS_BROWSER | If true will launch chromium GUI with each request. |\n| IDENTIFY_AS_BOT | Will Identify it self to the client as bot |\n| USER_AGENT_AS_BOT | Will use this user agent when requesting data|\n| ENABLE_OPTIMIZATION | Enable or disable optimization that will abort all ressources from the RESSOURCES_TO_DISABLE to disable var|\n| RESSOURCES_TO_DISABLE | List of the request type to disable|\n| WAIT_FOR_STARTERS | List of prefixes to check for while validating the element to wait for|\n|QUERY_URL_ONLY| Query Fields in order to optimize memory we will be heavily use projection|\nGenerate and consult documentation\n\ncompodoc documentation\nAfter launching the doculentation server -s it will be generated on the host 8080 port.\nto change the port consult the compodoc documentation -> just click on the compodoc logo below.  $ compodoc -p tsconfig.build.json -s\nswagger documentation\nThis will be available once the app is launched you could consult it on the /api endpoint of the project.\n\n\nTodos\n\n\nPoc final steps:\nswagger documentation.\ninsuring robustness and adding FIXME.\ncheck RMQ to avoid request time outs. ~\ncheck if feign could be added. ~\ncheck if eureka discovery is possible.\ncreate reporting service to create a report for each page:\nimplement a processor to check for the integrity of the output.\nmaybe save screen shots of the outputs as well.\nadd js ressources handler to minimize fetching time and rendering time as well.\nadd a light weight js dashborad to control this tiny beast.\ncreate docker compose\nadd a notification mechanism\n\n\nTodos in mvc:\nif query is identified as bot fetch data form pre-rendering engine\n\n\nTo dos in widgets:\nadd tags for identification\noptimize rendering time by building them as aot and migration to angular 9.\n\n\n\n\nThanks to\n\n\n  \n  \n  \n  \n\n---\n## VITAL NOTES:\n----\n- This project is in it's beta version there will be time out exceptions since the pre-processing engine takes a considerable amount of time\npre-renderign a page do this process has to be started in an a async way, the way spring batch does.\nor a messaging service has to be implemented like RMQ, so we dump messages for the app to handle and that way we could avoid time out exceptions\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PreRendererConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PreRenderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_PreRendererConfigModule\n\n\n\ncluster_PreRendererConfigModule_exports\n\n\n\ncluster_PreRenderModule\n\n\n\ncluster_PreRenderModule_providers\n\n\n\n\nLoggerModule\n\nLoggerModule\n\n\n\nPreRenderModule\n\nPreRenderModule\n\nPreRenderModule -->\n\nLoggerModule->PreRenderModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nLoggerService \n\nLoggerService \n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\nAppModule -->\n\nPreRenderModule->AppModule\n\n\n\n\n\nPreRendererConfigModule\n\nPreRendererConfigModule\n\nPreRenderModule -->\n\nPreRendererConfigModule->PreRenderModule\n\n\n\nAppModule -->\n\nPreRendererConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nPreRendererConfigModule->ConfigService \n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\nOptimizerService\n\nOptimizerService\n\nPreRenderModule -->\n\nOptimizerService->PreRenderModule\n\n\n\n\n\nPersistanceLayerService\n\nPersistanceLayerService\n\nPreRenderModule -->\n\nPersistanceLayerService->PreRenderModule\n\n\n\n\n\nPreRenderingEngineService\n\nPreRenderingEngineService\n\nPreRenderModule -->\n\nPreRenderingEngineService->PreRenderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PageSchema   (src/.../page.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/pre-renderer/schemas/page.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PageSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    pageUrl: String,\n    content: String,\n    contentDescription: String,\n    lastPreRenderingDate: Number,\n})\n                        \n                    \n\n                \n                    \n                        This ts file must contain all the schemas used in this module.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
